{"ast":null,"code":"var usersURL = \"http://localhost:3001/users\";\nvar eventsURL = \"http://localhost:3001/events\";\nvar userEventsURL = \"http://localhost:3001/user_events\";\nvar postsURL = \"http://localhost:3001/posts\";\nvar loginURL = \"http://localhost:3001/profile\";\n\nfunction changeSearchText(value) {\n  return {\n    type: \"CHANGE_SEARCH_TEXT\",\n    value: value\n  };\n}\n\nfunction changeDropValue(value) {\n  return {\n    type: \"CHANGE_DROP_VALUE\",\n    value: value\n  };\n} ///User Actions\n\n\nfunction fetchedUsers(users) {\n  return {\n    type: \"FETCHED_USERS\",\n    users: users\n  };\n}\n\nfunction loadingUsers() {\n  return {\n    type: \"FETCHING_USERS\"\n  };\n}\n\nfunction fetchUsers(value) {\n  return function (dispatch) {\n    dispatch(loadingUsers());\n    fetch(usersURL).then(function (res) {\n      return res.json();\n    }).then(function (users) {\n      return dispatch(fetchedUsers(users));\n    });\n  };\n} ///Event Actions\n\n\nfunction createEvent(event) {\n  return {\n    type: \"ADD_EVENT\",\n    event: event\n  };\n}\n\nfunction eventUpdated(painting) {\n  return {\n    type: \"PAINTING_UPDATED\",\n    painting: painting\n  };\n}\n\nfunction fetchedEvents(events) {\n  return {\n    type: \"FETCHED_EVENTS\",\n    events: events\n  };\n}\n\nfunction loadingEvents() {\n  return {\n    type: \"FETCHING_EVENTS\"\n  };\n}\n\nfunction fetchEvents(value) {\n  return function (dispatch) {\n    dispatch(loadingEvents());\n    fetch(eventsURL).then(function (res) {\n      return res.json();\n    }).then(function (events) {\n      return dispatch(fetchedEvents(events));\n    });\n  };\n} ///UserEvent Actions\n\n\nfunction createUserEvent(ue) {\n  return {\n    type: \"ADD_USER_EVENT\",\n    ue: ue\n  };\n}\n\nfunction fetchedUserEvents(ues) {\n  return {\n    type: \"FETCHED_USER_EVENTS\",\n    ues: ues\n  };\n}\n\nfunction loadingUserEvents() {\n  return {\n    type: \"FETCHING_USER_EVENTS\"\n  };\n}\n\nfunction fetchUserEvents(value) {\n  return function (dispatch) {\n    dispatch(loadingUserEvents());\n    fetch(userEventsURL).then(function (res) {\n      return res.json();\n    }).then(function (ues) {\n      return dispatch(fetchedUserEvents(ues));\n    });\n  };\n} //Post Actions\n\n\nfunction createPost(post) {\n  return {\n    type: \"ADD_POST\",\n    post: post\n  };\n}\n\nfunction fetchedPosts(posts) {\n  return {\n    type: \"FETCHED_POSTS\",\n    posts: posts\n  };\n}\n\nfunction loadingPosts() {\n  return {\n    type: \"FETCHING_POSTS\"\n  };\n}\n\nfunction fetchPosts(value) {\n  return function (dispatch) {\n    dispatch(loadingPosts());\n    fetch(postsURL).then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      return dispatch(fetchedPosts(posts));\n    });\n  };\n} ///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function getCurrentUser(){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n//mapDispatchToProps to currentUser is in app and\n//dispatch fetchUser function to app\n///dispatch function to App\n// , getCurrentUser, setCurrentUser, logOutCurrentUser\n\n\nexport { changeSearchText, changeDropValue, fetchUsers, fetchEvents, fetchUserEvents, fetchedEvents, fetchedUserEvents, createEvent, createPost, fetchPosts, fetchedPosts, loadingPosts };","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/redux/actions/index.js"],"names":["usersURL","eventsURL","userEventsURL","postsURL","loginURL","changeSearchText","value","type","changeDropValue","fetchedUsers","users","loadingUsers","fetchUsers","dispatch","fetch","then","res","json","createEvent","event","eventUpdated","painting","fetchedEvents","events","loadingEvents","fetchEvents","createUserEvent","ue","fetchedUserEvents","ues","loadingUserEvents","fetchUserEvents","createPost","post","fetchedPosts","posts","loadingPosts","fetchPosts"],"mappings":"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","sourcesContent":["const usersURL = \"http://localhost:3001/users\";\nconst eventsURL = \"http://localhost:3001/events\";\nconst userEventsURL = \"http://localhost:3001/user_events\";\nconst postsURL = \"http://localhost:3001/posts\"\nconst loginURL = \"http://localhost:3001/profile\"\n\n\nfunction changeSearchText(value) {\n  return { type: \"CHANGE_SEARCH_TEXT\", value: value };\n}\n\nfunction changeDropValue(value) {\n  return { type: \"CHANGE_DROP_VALUE\", value: value}\n}\n\n///User Actions\n\nfunction fetchedUsers(users){\n  return { type: \"FETCHED_USERS\", users };\n}\n\nfunction loadingUsers() {\n  return { type: \"FETCHING_USERS\" };\n}\n\n\nfunction fetchUsers(value) {\n  return dispatch => {\n     dispatch(loadingUsers());\n     fetch(usersURL)\n       .then(res => res.json())\n       .then(users => dispatch(fetchedUsers(users)));\n   };\n}\n\n\n\n\n///Event Actions\n\nfunction createEvent(event) {\n  return { type: \"ADD_EVENT\", event };\n}\n\n\nfunction eventUpdated(painting) {\n  return { type: \"PAINTING_UPDATED\", painting };\n}\n\n\nfunction fetchedEvents(events){\n  return { type: \"FETCHED_EVENTS\", events };\n}\n\nfunction loadingEvents() {\n  return { type: \"FETCHING_EVENTS\" };\n}\n\n\nfunction fetchEvents(value) {\n  return dispatch => {\n     dispatch(loadingEvents());\n     fetch(eventsURL)\n       .then(res => res.json())\n       .then(events => dispatch(fetchedEvents(events)));\n   };\n}\n\n\n///UserEvent Actions\n\nfunction createUserEvent(ue) {\n  return { type: \"ADD_USER_EVENT\", ue };\n}\n\nfunction fetchedUserEvents(ues){\n  return { type: \"FETCHED_USER_EVENTS\", ues };\n}\n\nfunction loadingUserEvents() {\n  return { type: \"FETCHING_USER_EVENTS\" };\n}\n\n\nfunction fetchUserEvents(value) {\n  return dispatch => {\n     dispatch(loadingUserEvents());\n     fetch(userEventsURL)\n       .then(res => res.json())\n       .then(ues => dispatch(fetchedUserEvents(ues)));\n   };\n}\n\n\n\n//Post Actions\n\nfunction createPost(post) {\n  return { type: \"ADD_POST\", post };\n}\n\nfunction fetchedPosts(posts){\n  return { type: \"FETCHED_POSTS\", posts };\n}\n\nfunction loadingPosts() {\n  return { type: \"FETCHING_POSTS\" };\n}\n\n\nfunction fetchPosts(value) {\n  return dispatch => {\n     dispatch(loadingPosts());\n     fetch(postsURL)\n       .then(res => res.json())\n       .then(posts => dispatch(fetchedPosts(posts)));\n   };\n}\n\n\n\n\n\n\n\n///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function getCurrentUser(){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n\n\n\n\n\n//mapDispatchToProps to currentUser is in app and\n\n\n//dispatch fetchUser function to app\n\n\n///dispatch function to App\n\n\n\n\n\n\n\n\n// , getCurrentUser, setCurrentUser, logOutCurrentUser\n\n\nexport { changeSearchText, changeDropValue, fetchUsers, fetchEvents, fetchUserEvents, fetchedEvents, fetchedUserEvents, createEvent, createPost, fetchPosts, fetchedPosts, loadingPosts };\n"]},"metadata":{},"sourceType":"module"}