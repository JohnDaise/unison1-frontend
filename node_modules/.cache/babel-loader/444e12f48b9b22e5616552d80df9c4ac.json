{"ast":null,"code":"import { combineReducers } from \"redux\"; // import userData from \"../users.json\";\n\nvar initialState = {\n  users: [],\n  currentUser: {},\n  events: [],\n  searchTerm: \"\"\n};\n\nvar searchTextReducer = function searchTextReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"searchTextReducer\", state, action);\n\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n\n    default:\n      return state;\n  }\n};\n\nvar usersReducer = function usersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHED_USERS\":\n      return action.users;\n\n    default:\n      return state;\n  }\n};\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHING_USERS\":\n      return true;\n\n    case \"FETCHED_USERS\":\n      return false;\n\n    case \"FETCHING_EVENTS\":\n      return true;\n\n    case \"FETCHED_EVENTS\":\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nvar eventsReducer = function eventsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_EVENT\":\n      return state.concat([action.payload]);\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  searchTerm: searchTextReducer,\n  users: usersReducer,\n  events: eventsReducer,\n  loading: loadingReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/redux/reducer.js"],"names":["combineReducers","initialState","users","currentUser","events","searchTerm","searchTextReducer","state","action","console","log","type","value","usersReducer","loadingReducer","eventsReducer","concat","payload","rootReducer","loading"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE,EAFM;AAGnBC,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;;AAQA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,KAAjC,EAAwCC,MAAxC;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,oBAAL;AACE,aAAOH,MAAM,CAACI,KAAd;;AACF;AACE,aAAOL,KAAP;AAJJ;AAMD,CARD;;AAUA,IAAMM,YAAY,GAAG,SAAfA,YAAe,GAAwB;AAAA,MAAvBN,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,eAAL;AACI,aAAOH,MAAM,CAACN,KAAd;;AACJ;AACE,aAAOK,KAAP;AAJJ;AAMD,CAPD;;AAUA,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,GAA2B;AAAA,MAA1BP,KAA0B,uEAAlB,KAAkB;AAAA,MAAXC,MAAW;;AAChD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,gBAAL;AACE,aAAO,IAAP;;AACF,SAAK,eAAL;AACE,aAAO,KAAP;;AACF,SAAK,iBAAL;AACE,aAAO,IAAP;;AACF,SAAK,gBAAL;AACE,aAAO,KAAP;;AACF;AACE,aAAOJ,KAAP;AAVJ;AAYD,CAbD;;AAgBA,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,GAAwB;AAAA,MAAvBR,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC5C,UAAOA,MAAM,CAACG,IAAd;AACE,SAAK,WAAL;AACE,aAAOJ,KAAK,CAACS,MAAN,CAAa,CAACR,MAAM,CAACS,OAAR,CAAb,CAAP;;AACF;AACE,aAAOV,KAAP;AAJJ;AAMD,CAPD;;AAYA,IAAMW,WAAW,GAAGlB,eAAe,CAAC;AAClCK,EAAAA,UAAU,EAAEC,iBADsB;AAElCJ,EAAAA,KAAK,EAAEW,YAF2B;AAGlCT,EAAAA,MAAM,EAAEW,aAH0B;AAIlCI,EAAAA,OAAO,EAAEL;AAJyB,CAAD,CAAnC;AAQA,eAAeI,WAAf","sourcesContent":["import { combineReducers } from \"redux\";\n// import userData from \"../users.json\";\n\nconst initialState = {\n  users: [],\n  currentUser: {},\n  events: [],\n  searchTerm: \"\"\n};\n\n\nconst searchTextReducer = (state = \"\", action) => {\n  console.log(\"searchTextReducer\", state, action);\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst usersReducer = (state = [], action) => {\n  switch(action.type){\n    case \"FETCHED_USERS\":\n        return action.users;\n    default:\n      return state;\n  }\n}\n\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCHING_USERS\":\n      return true;\n    case \"FETCHED_USERS\":\n      return false;\n    case \"FETCHING_EVENTS\":\n      return true;\n    case \"FETCHED_EVENTS\":\n      return false;\n    default:\n      return state;\n  }\n};\n\n\nconst eventsReducer = (state = [], action) => {\n  switch(action.type){\n    case \"ADD_EVENT\":\n      return state.concat([action.payload]);\n    default:\n      return state;\n  }\n}\n\n\n\n\nconst rootReducer = combineReducers({\n  searchTerm: searchTextReducer,\n  users: usersReducer,\n  events: eventsReducer,\n  loading: loadingReducer\n});\n\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}