{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsContainer.js\";\nimport React from \"react\";\nimport NewEventForm from './NewEventForm';\nimport UpdateEventForm from './UpdateEventForm';\nimport EventsList from './EventsList';\nimport EventDetail from './EventDetail';\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchedEvents } from \"../redux/actions/index\";\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Container, Divider } from 'semantic-ui-react';\n\nvar EventsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventsContainer, _React$Component);\n\n  function EventsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, EventsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventsContainer).call(this, props));\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n      console.log(\"Create NEW Event Form\");\n    };\n\n    _this.state = {\n      startDate: moment()\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventsContainer, [{\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n    }\n  }, {\n    key: \"render\",\n    ///need a switch below for each event routes for events should be restful so they are shareable also add scroll\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Container, {\n        textAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(Container, {\n        textAlign: \"right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(NewEventForm, {\n        currentUser: this.props.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/myevents/:eventId\",\n        render: function render(data) {\n          console.log(data);\n          return React.createElement(EventDetail, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return EventsContainer;\n}(React.Component);\n\n; // <Container>\n//     <EventsList currentUser={this.props.currentUser} />\n// </Container>\n// <Container>\n//     <EventDetail />\n// </Container>\n//\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents\n})(EventsContainer); // <Switch>\n// <Route\n//   path=\"/myevents/:eventId\"\n//   render={data => {\n//     let singleEvent = this.state.events.find(\n//       event => event.id === data.match.params.eventId\n//     );\n//     return <EventDetail singleEvent={singleEvent}/>;\n//     }}\n//     />\n//   <Route\n//     path=\"/\"\n//     render={() => (\n//       <EventsList />\n//     )}\n//     />\n// </Switch>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsContainer.js"],"names":["React","NewEventForm","UpdateEventForm","EventsList","EventDetail","Route","Switch","connect","fetchEvents","fetchedEvents","DatePicker","moment","Container","Divider","EventsContainer","props","handleClick","e","preventDefault","console","log","state","startDate","handleChange","bind","date","setState","currentUser","data","Component","mapStateToProps","loading","events"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAGA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,wBAA3C;AAGA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,4CAAP;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mBAAnC;;IAGMC,e;;;;;AACJ,2BAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,yFAAMA,KAAN;;AADkB,UAkBpBC,WAlBoB,GAkBP,UAACC,CAAD,EAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,KArBkB;;AAElB,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEX,MAAM;AADN,KAAb;AAGA,UAAKY,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AALkB;AAMnB;;;;iCAEYC,I,EAAM;AACjB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,SAAS,EAAEG;AADC,OAAd;AAGD;;;wCAEmB;AAChB,WAAKV,KAAL,CAAWP,WAAX;AACD;;;AAML;6BACU;AACN,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKa,KAAL,CAAWC,SADvB;AAEE,QAAA,QAAQ,EAAE,KAAKC,YAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAOI,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWY,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,EAUI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACG,QAAA,IAAI,EAAC,oBADR;AAEG,QAAA,MAAM,EAAE,gBAACC,IAAD,EAAU;AAChBT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AACD,iBAAO,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACA,SALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVJ,CADF;AAuBE;;;;EAhDwB5B,KAAK,CAAC6B,S;;AAiDnC,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAT,KAAK,EAAI;AAC/B,SAAO;AACLU,IAAAA,OAAO,EAAEV,KAAK,CAACU,OADV;AAELC,IAAAA,MAAM,EAAEX,KAAK,CAACW;AAFT,GAAP;AAID,CALD;;AAOA,eAAezB,OAAO,CACpBuB,eADoB,EAEpB;AAAEtB,EAAAA,WAAW,EAAXA;AAAF,CAFoB,CAAP,CAGbM,eAHa,CAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport NewEventForm from './NewEventForm'\nimport UpdateEventForm from './UpdateEventForm'\nimport EventsList from './EventsList'\nimport EventDetail from './EventDetail'\n\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchedEvents } from \"../redux/actions/index\";\n\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { Container, Divider } from 'semantic-ui-react'\n\n\nclass EventsContainer extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      startDate: moment()\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n  componentDidMount() {\n      this.props.fetchEvents();\n    }\n\n  handleClick= (e) => {\n     e.preventDefault();\n     console.log(\"Create NEW Event Form\")\n   }\n///need a switch below for each event routes for events should be restful so they are shareable also add scroll\n  render(){\n    return (\n      <React.Fragment>\n          <Container textAlign='left'>\n              <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n              />\n          </Container>\n          <Container textAlign='right'>\n              <NewEventForm currentUser={this.props.currentUser} />\n          </Container>\n          <Switch>\n            <Route\n               path=\"/myevents/:eventId\"\n               render={(data) => {\n                 console.log(data)\n                return <EventDetail />\n               }}\n\n                />\n          </Switch>\n\n      </React.Fragment>\n    )}\n};\n\n// <Container>\n//     <EventsList currentUser={this.props.currentUser} />\n// </Container>\n// <Container>\n//     <EventDetail />\n// </Container>\n//\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    events: state.events\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchEvents }\n)(EventsContainer);\n\n// <Switch>\n// <Route\n//   path=\"/myevents/:eventId\"\n//   render={data => {\n//     let singleEvent = this.state.events.find(\n//       event => event.id === data.match.params.eventId\n//     );\n//     return <EventDetail singleEvent={singleEvent}/>;\n//     }}\n//     />\n//   <Route\n//     path=\"/\"\n//     render={() => (\n//       <EventsList />\n//     )}\n//     />\n// </Switch>\n"]},"metadata":{},"sourceType":"module"}