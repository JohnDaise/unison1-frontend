{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsContainer.js\";\nimport React from \"react\";\nimport NewEventForm from './NewEventForm';\nimport UpdateEventForm from './UpdateEventForm';\nimport EventsList from './EventsList';\nimport EventDetail from './EventDetail';\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchedEvents, loading } from \"../redux/actions/index\";\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Container, Divider, Grid, Loader } from 'semantic-ui-react';\n\nvar EventsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventsContainer, _React$Component);\n\n  function EventsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, EventsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventsContainer).call(this, props));\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n      console.log(\"Create NEW Event Form\");\n    };\n\n    _this.state = {\n      startDate: moment(),\n      isNewEventFormModalOpen: false,\n      isUpdateEventFormModalOpen: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchUsers();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"closeEventFormModal\",\n    value: function closeEventFormModal() {\n      this.setState({\n        isNewEventFormModalOpen: false\n      });\n    }\n  }, {\n    key: \"render\",\n    ///need a switch below for each event routes for events should be restful so they are shareable also add scroll\n    value: function render() {\n      return React.createElement(Grid, {\n        columns: 2,\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(NewEventForm, {\n        currentUser: this.props.currentUser,\n        fetchEvents: this.props.fetchEvents,\n        isNewEventFormModalOpen: this.state.isNewEventFormModalOpen,\n        closeEventFormModal: this.closeEventFormModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(EventsList, {\n        currentUser: this.props.currentUser,\n        fetchEvents: this.props.fetchEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Container, {\n        textAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return EventsContainer;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchUsers: fetchUsers\n})(EventsContainer); // <Switch>\n// <Route\n//   path=\"/myevents/:eventId\"\n//   render={data => {\n//     let singleEvent = this.state.events.find(\n//       event => event.id === data.match.params.eventId\n//     );\n//     return <EventDetail singleEvent={singleEvent}/>;\n//     }}\n//     />\n//   <Route\n//     path=\"/\"\n//     render={() => (\n//       <EventsList />\n//     )}\n//     />\n// </Switch>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsContainer.js"],"names":["React","NewEventForm","UpdateEventForm","EventsList","EventDetail","Route","Switch","connect","fetchEvents","fetchUsers","fetchedEvents","loading","DatePicker","moment","Container","Divider","Grid","Loader","EventsContainer","props","handleClick","e","preventDefault","console","log","state","startDate","isNewEventFormModalOpen","isUpdateEventFormModalOpen","handleChange","bind","date","setState","currentUser","closeEventFormModal","Component","mapStateToProps","events","users"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewEventForm from './NewEventForm'\nimport UpdateEventForm from './UpdateEventForm'\nimport EventsList from './EventsList'\nimport EventDetail from './EventDetail'\n\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchedEvents, loading } from \"../redux/actions/index\";\n\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { Container, Divider, Grid, Loader } from 'semantic-ui-react'\n\n\nclass EventsContainer extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      startDate: moment(),\n      isNewEventFormModalOpen: false,\n      isUpdateEventFormModalOpen: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchUsers();\n    }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n\ncloseEventFormModal(){\n  this.setState({\n    isNewEventFormModalOpen: false\n  })\n}\n\n\n\n  handleClick= (e) => {\n     e.preventDefault();\n     console.log(\"Create NEW Event Form\")\n   }\n///need a switch below for each event routes for events should be restful so they are shareable also add scroll\n  render(){\n\n    return (\n      <Grid columns={2} divided>\n        <Grid.Column textAlign='center'>\n          <NewEventForm\n            currentUser={this.props.currentUser}\n            fetchEvents={this.props.fetchEvents}\n            isNewEventFormModalOpen={this.state.isNewEventFormModalOpen}\n            closeEventFormModal={this.closeEventFormModal}\n             />\n          <EventsList currentUser={this.props.currentUser} fetchEvents={this.props.fetchEvents}  />\n        </Grid.Column>\n        <Grid.Column>\n          <Container textAlign='left'>\n              <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n              />\n          </Container>\n        </Grid.Column>\n      </Grid>\n    )}\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchEvents, fetchUsers }\n)(EventsContainer);\n\n// <Switch>\n// <Route\n//   path=\"/myevents/:eventId\"\n//   render={data => {\n//     let singleEvent = this.state.events.find(\n//       event => event.id === data.match.params.eventId\n//     );\n//     return <EventDetail singleEvent={singleEvent}/>;\n//     }}\n//     />\n//   <Route\n//     path=\"/\"\n//     render={() => (\n//       <EventsList />\n//     )}\n//     />\n// </Switch>\n"]},"metadata":{},"sourceType":"module"}