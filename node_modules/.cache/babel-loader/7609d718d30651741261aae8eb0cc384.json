{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventDetail.js\";\nimport React from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\nimport { Grid, Image, Loader, Button } from 'semantic-ui-react';\nimport MoreDetails from './MoreDetails';\nimport PlayersList from './PlayersList';\nimport PostList from './PostList';\nimport NewPostForm from './NewPostForm';\nimport moment from 'moment';\n\nvar EventDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventDetail, _React$Component);\n\n  function EventDetail() {\n    _classCallCheck(this, EventDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EventDetail).apply(this, arguments));\n  }\n\n  _createClass(EventDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var weekday = {\n        0: \"Sunday\",\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\" //onClick will make all elements editable. use vanilla js and add id's to the editable elements\n\n      };\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(Loader, {\n        active: true,\n        inline: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }) : React.createElement(Grid, {\n        columns: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        contenteditable: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.props.event.name), React.createElement(\"h2\", {\n        contenteditable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \" \", weekday[moment(this.props.event.datetime).format('E')], \" \", moment(this.props.event.datetime).format('MMMM DD YYYY')), React.createElement(\"h2\", {\n        contenteditable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, moment(this.props.event.datetime).format('h:mm a')), React.createElement(\"h2\", {\n        contenteditable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.props.event.location), React.createElement(\"h2\", {\n        contenteditable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.event.notes), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" Update Event \"), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \" Delete Event \")), React.createElement(Grid.Column, {\n        className: \"post-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(NewPostForm, {\n        currentUser: this.props.currentUser,\n        singleEvent: this.props.event,\n        fetchEvents: this.props.fetchEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(PostList, {\n        currentUser: this.props.currentUser,\n        singleEvent: this.props.event,\n        fetchEvents: this.props.fetchEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(PlayersList, {\n        currentUser: this.props.currentUser,\n        players: this.props.event.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return EventDetail;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  var event = state.events.find(function (event) {\n    return event.id === parseInt(propsFromParent.eventId);\n  });\n  return {\n    loading: state.loading,\n    events: state.events,\n    posts: state.posts,\n    event: event\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchPosts: fetchPosts\n})(EventDetail); //\n// <React.Fragment>>\n//   <h1>{this.props.event.name}</h1>\n//   <h3>{this.props.event.location}</h3>\n//   <h3>{this.props.event.time}</h3>\n//   <h3>{this.props.event.notes}</h3>\n// </React.Fragment>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventDetail.js"],"names":["React","Link","Route","Switch","connect","fetchEvents","fetchPosts","loading","Grid","Image","Loader","Button","MoreDetails","PlayersList","PostList","NewPostForm","moment","EventDetail","props","weekday","event","name","datetime","format","location","notes","currentUser","users","Component","mapStateToProps","state","propsFromParent","events","find","id","parseInt","eventId","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAqC,kBAArC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,OAAlC,QAAiD,wBAAjD;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,QAA4C,mBAA5C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAIMC,W;;;;;;;;;;;;;wCAEa;AACjB,WAAKC,KAAL,CAAWb,WAAX;AACA,WAAKa,KAAL,CAAWZ,UAAX;AACD;;;6BAKU;AAEP,UAAIa,OAAO,GAAG;AACb,WAAG,QADU;AAEb,WAAG,QAFU;AAGb,WAAG,SAHU;AAIb,WAAG,WAJU;AAKb,WAAG,UALU;AAMb,WAAG,QANU;AAOb,WAAG,UAPU,CASlB;;AATkB,OAAd;AAUE,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKD,KAAL,CAAWX,OAAX,GACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGJ,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,eAAe,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKW,KAAL,CAAWE,KAAX,CAAiBC,IAA9C,CADF,EAEE;AAAI,QAAA,eAAe,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA8BF,OAAO,CAACH,MAAM,CAAC,KAAKE,KAAL,CAAWE,KAAX,CAAiBE,QAAlB,CAAN,CAAkCC,MAAlC,CAAyC,GAAzC,CAAD,CAArC,OAAuFP,MAAM,CAAC,KAAKE,KAAL,CAAWE,KAAX,CAAiBE,QAAlB,CAAN,CAAkCC,MAAlC,CAAyC,cAAzC,CAAvF,CAFF,EAGE;AAAI,QAAA,eAAe,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BP,MAAM,CAAC,KAAKE,KAAL,CAAWE,KAAX,CAAiBE,QAAlB,CAAN,CAAkCC,MAAlC,CAAyC,QAAzC,CAA7B,CAHF,EAIE;AAAI,QAAA,eAAe,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKL,KAAL,CAAWE,KAAX,CAAiBI,QAA9C,CAJF,EAKE;AAAI,QAAA,eAAe,EAAE,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKN,KAAL,CAAWE,KAAX,CAAiBK,KAA9C,CALF,EAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANF,EAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPF,CADF,EAUE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAE,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ,WAArC;AAAkD,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWE,KAA1E;AAAiF,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWb,WAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKa,KAAL,CAAWQ,WAAlC;AAA+C,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWE,KAAvE;AAA8E,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWb,WAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,EAcE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKa,KAAL,CAAWQ,WAArC;AAAkD,QAAA,OAAO,EAAE,KAAKR,KAAL,CAAWE,KAAX,CAAiBO,KAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAdF,CAJA,CADF;AAyBH;;;;EA/CuB3B,KAAK,CAAC4B,S;;AAkD9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,eAAR,EAA4B;AAClD,MAAIX,KAAK,GAAGU,KAAK,CAACE,MAAN,CAAaC,IAAb,CAAkB,UAAAb,KAAK;AAAA,WAAIA,KAAK,CAACc,EAAN,KAAaC,QAAQ,CAACJ,eAAe,CAACK,OAAjB,CAAzB;AAAA,GAAvB,CAAZ;AACA,SAAO;AACL7B,IAAAA,OAAO,EAAEuB,KAAK,CAACvB,OADV;AAELyB,IAAAA,MAAM,EAAEF,KAAK,CAACE,MAFT;AAGLK,IAAAA,KAAK,EAAEP,KAAK,CAACO,KAHR;AAILjB,IAAAA,KAAK,EAAEA;AAJF,GAAP;AAOA,CATF;;AAWC,eAAehB,OAAO,CACpByB,eADoB,EAEpB;AAAExB,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA;AAAf,CAFoB,CAAP,CAGbW,WAHa,CAAf,C,CAMD;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Link, Route, Switch  } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\n\nimport { Grid, Image, Loader, Button } from 'semantic-ui-react';\nimport MoreDetails from './MoreDetails';\nimport PlayersList from './PlayersList';\nimport PostList from './PostList';\nimport NewPostForm from './NewPostForm';\nimport moment from 'moment';\n\n\n\nclass EventDetail extends React.Component {\n\ncomponentDidMount(){\n  this.props.fetchEvents();\n  this.props.fetchPosts();\n}\n\n\n\n\n  render() {\n\n    let weekday = {\n     0: \"Sunday\",\n     1: \"Monday\",\n     2: \"Tuesday\",\n     3: \"Wednesday\",\n     4: \"Thursday\",\n     5: \"Friday\",\n     6: \"Saturday\",\n  }\n//onClick will make all elements editable. use vanilla js and add id's to the editable elements\n      return (\n        <React.Fragment>\n           {this.props.loading ?\n              <Loader active inline='centered' />\n             :\n        <Grid columns={3}>\n          <Grid.Column textAlign='center'>\n            <h1 contenteditable={true} >{this.props.event.name}</h1>\n            <h2 contenteditable={false}> {weekday[moment(this.props.event.datetime).format('E')]} {moment(this.props.event.datetime).format('MMMM DD YYYY')}</h2>\n            <h2 contenteditable={false}>{moment(this.props.event.datetime).format('h:mm a')}</h2>\n            <h2 contenteditable={false}>{this.props.event.location}</h2>\n            <h2 contenteditable={false}>{this.props.event.notes}</h2>\n            <Button> Update Event </Button>\n            <Button> Delete Event </Button>\n          </Grid.Column>\n          <Grid.Column className={\"post-col\"}>\n            <NewPostForm currentUser={this.props.currentUser} singleEvent={this.props.event} fetchEvents={this.props.fetchEvents} />\n            <PostList currentUser={this.props.currentUser} singleEvent={this.props.event} fetchEvents={this.props.fetchEvents} />\n          </Grid.Column>\n          <Grid.Column textAlign='center'>\n            <PlayersList currentUser={this.props.currentUser} players={this.props.event.users} />\n          </Grid.Column>\n        </Grid>}\n        </React.Fragment>\n      )\n  }\n}\n\n  const mapStateToProps = (state, propsFromParent) => {\n    let event = state.events.find(event => event.id === parseInt(propsFromParent.eventId))\n    return {\n      loading: state.loading,\n      events: state.events,\n      posts: state.posts,\n      event: event\n\n    };\n   };\n\n   export default connect(\n     mapStateToProps,\n     { fetchEvents, fetchPosts }\n   )(EventDetail);\n\n\n  //\n  // <React.Fragment>>\n  //   <h1>{this.props.event.name}</h1>\n  //   <h3>{this.props.event.location}</h3>\n  //   <h3>{this.props.event.time}</h3>\n  //   <h3>{this.props.event.notes}</h3>\n  // </React.Fragment>\n"]},"metadata":{},"sourceType":"module"}