{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js\";\nimport React from \"react\";\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport Iframe from 'react-iframe';\n\nvar Post =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Post, _React$Component);\n\n  function Post() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Post);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Post)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderIframe = function (params) {\n      if (_this.props.post.url.includes('youtube')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Notes: \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, _this.props.post.content), React.createElement(\"iframe\", {\n          width: \"380\",\n          height: \"157\",\n          src: \"https://www.youtube.com/embed/\" + _this.props.post.url.split(\"=\")[1],\n          frameborder: \"0\",\n          allow: \"autoplay; encrypted-media\",\n          allowfullscreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n      } else if (_this.props.post.url.includes('youtu')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Notes: \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, _this.props.post.content), React.createElement(\"iframe\", {\n          width: \"380\",\n          height: \"157\",\n          src: \"https://www.youtube.com/embed/\" + _this.props.post.url.split(\"/\")[3],\n          frameborder: \"0\",\n          allow: \"autoplay; encrypted-media\",\n          allowfullscreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      } else if (_this.props.post.url.includes('pdf')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Notes: \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, _this.props.post.content), React.createElement(\"iframe\", {\n          width: \"380\",\n          height: \"157\",\n          src: _this.props.post.url,\n          frameborder: \"0\",\n          allow: \"autoplay; encrypted-media\",\n          allowfullscreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }));\n      } else if (_this.props.post.url.includes('jpg')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Notes: \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, _this.props.post.content), React.createElement(\"iframe\", {\n          width: \"380\",\n          height: \"157\",\n          src: _this.props.post.url,\n          frameborder: \"0\",\n          allow: \"autoplay; encrypted-media\",\n          allowfullscreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, _this.props.post.content));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Post, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.renderIframe(this.props.post.url));\n    }\n  }]);\n\n  return Post;\n}(React.Component);\n\nexport default Post; // const mapStateToProps = (state, propsFromParent) => {\n//   // let post = state.posts.find(post => post.id === props.singleEvent.id)\n//   return {\n//     loading: state.loading,\n//     events: state.events,\n//     posts: state.posts,\n//   };\n//  };\n//\n//  export default connect(mapStateToProps)(Post);\n// case this.props.post.url.includes('jpg'):\n// return (\n//    <div>\n//    Notes: <p>{this.props.post.content}</p>\n//      <iframe\n//        style=\"border:1px solid #666CCC\"\n//        title=\"PDF in an i-Frame\"\n//        src={this.props.post.url}\n//        frameborder=\"1\"\n//        scrolling=\"auto\"\n//        height=\"1100\"\n//        width=\"850\" ></iframe>\n//      </div>\n//    )\n//      break;\n// let event = state.events.find(event => event.id === parseInt(propsFromParent.eventId))\n// <iframe width=\"380\"\n// height=\"200\"\n// src={props.post.url}\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n//\n//\n// {props.post.url !== \"\" ?\n//   <div>\n//   Notes: <p>{props.post.content}</p>\n//   <iframe width=\"380\"\n//   height=\"200\"\n//   src={props.post.url}\n//   frameborder=\"0\"\n//   allow=\"autoplay; encrypted-media\"\n//   allowfullscreen></iframe>\n//   </div> :\n//\n//   <div>\n//     <p>{props.post.content}</p>\n//   </div>\n// }\n//\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js"],"names":["React","Grid","connect","Iframe","Post","renderIframe","params","props","post","url","includes","content","split","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\n\nimport Iframe from 'react-iframe';\n\n\n\nclass Post extends React.Component{\n\n\nrenderIframe = (params) => {\n\n      if (this.props.post.url.includes('youtube')){\n        return (\n         <div>\n         Notes: <p>{this.props.post.content}</p>\n         <iframe width=\"380\"\n           height=\"157\"\n           src={\"https://www.youtube.com/embed/\"+ this.props.post.url.split(\"=\")[1]}\n           frameborder=\"0\"\n           allow=\"autoplay; encrypted-media\"\n           allowfullscreen></iframe>\n           </div>\n         )\n       }\n      else if (this.props.post.url.includes('youtu')){\n      return (\n          <div>\n          Notes: <p>{this.props.post.content}</p>\n          <iframe width=\"380\"\n            height=\"157\"\n            src={\"https://www.youtube.com/embed/\"+ this.props.post.url.split(\"/\")[3]}\n            frameborder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowfullscreen></iframe>\n            </div>\n          )\n        }\n      else if (this.props.post.url.includes('pdf')){\n      return (\n          <div>\n          Notes: <p>{this.props.post.content}</p>\n          <iframe width=\"380\"\n            height=\"157\"\n            src={this.props.post.url}\n            frameborder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowfullscreen></iframe>\n            </div>\n          )\n        }\n      else if (this.props.post.url.includes('jpg')){\n      return (\n          <div>\n          Notes: <p>{this.props.post.content}</p>\n          <iframe width=\"380\"\n            height=\"157\"\n            src={this.props.post.url}\n            frameborder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowfullscreen></iframe>\n            </div>\n          )\n        }\n         else {\n            return (\n              <div>\n                <p>{this.props.post.content}</p>\n              </div>\n            )\n          }\n}\n\n\nrender(){\n  return(\n    <React.Fragment>\n        {this.renderIframe(this.props.post.url)}\n     </React.Fragment>\n  )\n  }\n}\n\n export default Post;\n// const mapStateToProps = (state, propsFromParent) => {\n//   // let post = state.posts.find(post => post.id === props.singleEvent.id)\n//   return {\n//     loading: state.loading,\n//     events: state.events,\n//     posts: state.posts,\n//   };\n//  };\n//\n//  export default connect(mapStateToProps)(Post);\n\n\n\n // case this.props.post.url.includes('jpg'):\n // return (\n //    <div>\n //    Notes: <p>{this.props.post.content}</p>\n //      <iframe\n //        style=\"border:1px solid #666CCC\"\n //        title=\"PDF in an i-Frame\"\n //        src={this.props.post.url}\n //        frameborder=\"1\"\n //        scrolling=\"auto\"\n //        height=\"1100\"\n //        width=\"850\" ></iframe>\n //      </div>\n //    )\n //      break;\n\n\n\n// let event = state.events.find(event => event.id === parseInt(propsFromParent.eventId))\n\n\n\n// <iframe width=\"380\"\n// height=\"200\"\n// src={props.post.url}\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n//\n//\n\n\n\n\n\n\n    // {props.post.url !== \"\" ?\n    //   <div>\n    //   Notes: <p>{props.post.content}</p>\n    //   <iframe width=\"380\"\n    //   height=\"200\"\n    //   src={props.post.url}\n    //   frameborder=\"0\"\n    //   allow=\"autoplay; encrypted-media\"\n    //   allowfullscreen></iframe>\n    //   </div> :\n    //\n    //   <div>\n    //     <p>{props.post.content}</p>\n    //   </div>\n  // }\n\n\n\n\n\n\n\n\n\n\n//\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>\n"]},"metadata":{},"sourceType":"module"}