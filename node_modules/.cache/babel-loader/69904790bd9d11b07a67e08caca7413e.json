{"ast":null,"code":"var usersURL = \"http://localhost:3001/users\";\nvar eventsURL = \"http://localhost:3001/events\";\nvar userEventsURL = \"http://localhost:3001/user_events\";\nvar postsURL = \"http://localhost:3001/posts\"; // const loginURL = \"http://localhost:3001/profile\"\n\nexport function changeSearchText(value) {\n  return {\n    type: \"CHANGE_SEARCH_TEXT\",\n    value: value\n  };\n}\nexport function changeDropValue(value) {\n  return {\n    type: \"CHANGE_DROP_VALUE\",\n    value: value\n  };\n}\nexport function resetDropValue(value) {\n  return {\n    type: \"ROUTER_CHANGE\",\n    value: value\n  };\n}\nexport var ROUTER = {\n  CHANGE: \"ROUTER_CHANGE\"\n};\nexport var changeRouter = function changeRouter(change) {\n  return {\n    type: ROUTER.CHANGE,\n    change: change\n  };\n};\nhashHistory.listen(function (change) {\n  return store.dispatch(changeRouter(change));\n}); ///User Actions\n\nexport function fetchedUsers(users) {\n  return {\n    type: \"FETCHED_USERS\",\n    users: users\n  };\n}\nexport function loadingUsers() {\n  return {\n    type: \"FETCHING_USERS\"\n  };\n}\nexport function fetchUsers(value) {\n  return function (dispatch) {\n    dispatch(loadingUsers());\n    fetch(usersURL).then(function (res) {\n      return res.json();\n    }).then(function (users) {\n      return dispatch(fetchedUsers(users));\n    });\n  };\n} ///Event Actions\n\nexport function createEvent(event) {\n  return {\n    type: \"ADD_EVENT\",\n    event: event\n  };\n}\nexport function eventUpdated(event) {\n  return {\n    type: \"EVENT_UPDATED\",\n    event: event\n  };\n}\nexport function updateEvent(_ref) {\n  var payload = _ref.payload,\n      eventId = _ref.eventId;\n  return function (dispatch, getState) {\n    // const organizer = getState().events.find(event => event.id === eventId).user;\n    var data = {\n      name: payload.name,\n      location: payload.location,\n      datetime: payload.startDate,\n      notes: payload.notes\n    };\n    fetch(\"\".concat(eventsURL, \"/\").concat(eventId), {\n      method: \"PATCH\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (event) {\n      return dispatch(eventUpdated(event));\n    });\n  };\n}\n;\nexport function eventDeleted(event) {\n  return {\n    type: \"EVENT_DELETED\",\n    event: event\n  };\n}\nexport function deleteEvent(eventId) {\n  return function (dispatch, getState) {\n    fetch(\"\".concat(eventsURL, \"/\").concat(eventId), {\n      method: \"DELETE\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return dispatch(eventDeleted(json));\n    });\n  };\n}\nexport function fetchedEvents(events) {\n  return {\n    type: \"FETCHED_EVENTS\",\n    events: events\n  };\n}\nexport function loadingEvents() {\n  return {\n    type: \"FETCHING_EVENTS\"\n  };\n}\nexport function fetchEvents(value) {\n  return function (dispatch) {\n    dispatch(loadingEvents());\n    fetch(eventsURL).then(function (res) {\n      return res.json();\n    }).then(function (events) {\n      return dispatch(fetchedEvents(events));\n    });\n  };\n} ///UserEvent Actions\n\nexport function createUserEvent(ue) {\n  return {\n    type: \"ADD_USER_EVENT\",\n    ue: ue\n  };\n}\nexport function fetchedUserEvents(ues) {\n  return {\n    type: \"FETCHED_USER_EVENTS\",\n    ues: ues\n  };\n}\nexport function loadingUserEvents() {\n  return {\n    type: \"FETCHING_USER_EVENTS\"\n  };\n}\nexport function fetchUserEvents(value) {\n  return function (dispatch) {\n    dispatch(loadingUserEvents());\n    fetch(userEventsURL).then(function (res) {\n      return res.json();\n    }).then(function (ues) {\n      return dispatch(fetchedUserEvents(ues));\n    });\n  };\n}\nexport function userEventDeleted(ue) {\n  return {\n    type: \"USER_EVENT_DELETED\",\n    ue: ue\n  };\n}\nexport function deleteUserEvent(ueId) {\n  return function (dispatch, getState) {\n    fetch(\"\".concat(userEventsURL, \"/\").concat(ueId), {\n      method: \"DELETE\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return dispatch(userEventDeleted(json));\n    });\n  };\n} //Post Actions\n\nexport function createPost(post) {\n  return {\n    type: \"ADD_POST\",\n    post: post\n  };\n}\nexport function fetchedPosts(posts) {\n  return {\n    type: \"FETCHED_POSTS\",\n    posts: posts\n  };\n}\nexport function loadingPosts() {\n  return {\n    type: \"FETCHING_POSTS\"\n  };\n}\nexport function postDeleted(post) {\n  return {\n    type: \"POST_DELETED\",\n    post: post\n  };\n}\nexport function fetchPosts(value) {\n  return function (dispatch) {\n    dispatch(loadingPosts());\n    fetch(postsURL).then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      return dispatch(fetchedPosts(posts));\n    });\n  };\n}\nexport function deletePost(postId) {\n  return function (dispatch, getState) {\n    fetch(\"\".concat(postsURL, \"/\").concat(postId), {\n      method: \"DELETE\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return dispatch(postDeleted(json));\n    });\n  };\n} ///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function login(email, password){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n//mapDispatchToProps to currentUser is in app and\n//dispatch fetchUser function to app\n///dispatch function to App\n// , getCurrentUser, setCurrentUser, logOutCurrentUser\n// export { changeSearchText, changeDropValue, resetDropValue, fetchUsers, fetchEvents, fetchUserEvents, fetchedEvents, fetchedUserEvents, createEvent, createUserEvent, createPost, fetchPosts, fetchedPosts, loadingPosts, updateEvent, eventUpdated, deleteEvent, loadingEvents, eventDeleted, deletePost, postDeleted };","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/redux/actions/index.js"],"names":["usersURL","eventsURL","userEventsURL","postsURL","changeSearchText","value","type","changeDropValue","resetDropValue","ROUTER","CHANGE","changeRouter","change","hashHistory","listen","store","dispatch","fetchedUsers","users","loadingUsers","fetchUsers","fetch","then","res","json","createEvent","event","eventUpdated","updateEvent","payload","eventId","getState","data","name","location","datetime","startDate","notes","method","body","JSON","stringify","headers","Accept","eventDeleted","deleteEvent","fetchedEvents","events","loadingEvents","fetchEvents","createUserEvent","ue","fetchedUserEvents","ues","loadingUserEvents","fetchUserEvents","userEventDeleted","deleteUserEvent","ueId","createPost","post","fetchedPosts","posts","loadingPosts","postDeleted","fetchPosts","deletePost","postId"],"mappings":"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","sourcesContent":["const usersURL = \"http://localhost:3001/users\";\nconst eventsURL = \"http://localhost:3001/events\";\nconst userEventsURL = \"http://localhost:3001/user_events\";\nconst postsURL = \"http://localhost:3001/posts\"\n\n// const loginURL = \"http://localhost:3001/profile\"\n\n\nexport function changeSearchText(value) {\n  return { type: \"CHANGE_SEARCH_TEXT\", value: value };\n}\n\nexport function changeDropValue(value) {\n  return { type: \"CHANGE_DROP_VALUE\", value: value}\n}\n\nexport function resetDropValue(value) {\n  return { type: \"ROUTER_CHANGE\", value: value}\n}\n\nexport const ROUTER = {\n  CHANGE: \"ROUTER_CHANGE\"\n};\n\nexport const changeRouter = (change) => ({\n  type: ROUTER.CHANGE,\n  change\n});\n\nhashHistory.listen(change => store.dispatch(changeRouter(change)));\n\n\n///User Actions\n\nexport function fetchedUsers(users){\n  return { type: \"FETCHED_USERS\", users };\n}\n\nexport function loadingUsers() {\n  return { type: \"FETCHING_USERS\" };\n}\n\n\nexport function fetchUsers(value) {\n  return dispatch => {\n     dispatch(loadingUsers());\n     fetch(usersURL)\n       .then(res => res.json())\n       .then(users => dispatch(fetchedUsers(users)));\n   };\n}\n\n\n\n\n///Event Actions\n\nexport function createEvent(event) {\n  return { type: \"ADD_EVENT\", event };\n}\n\n\nexport function eventUpdated(event) {\n  return { type: \"EVENT_UPDATED\", event };\n}\n\n\nexport function updateEvent({ payload, eventId }) {\n  return function(dispatch, getState) {\n    // const organizer = getState().events.find(event => event.id === eventId).user;\n    let data = {\n      name: payload.name,\n      location: payload.location,\n      datetime: payload.startDate,\n      notes: payload.notes\n    };\n    fetch(`${eventsURL}/${eventId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(event => dispatch(eventUpdated(event)));\n  };\n};\n\n\nexport function eventDeleted(event) {\n  return {\n    type: \"EVENT_DELETED\", event\n  };\n}\n\nexport function deleteEvent(eventId) {\n  return function(dispatch, getState) {\n    fetch(`${eventsURL}/${eventId}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then( json => dispatch(eventDeleted(json)));\n  };\n}\n\n\nexport function fetchedEvents(events){\n  return { type: \"FETCHED_EVENTS\", events };\n}\n\nexport function loadingEvents() {\n  return { type: \"FETCHING_EVENTS\" };\n}\n\n\nexport function fetchEvents(value) {\n  return dispatch => {\n     dispatch(loadingEvents());\n     fetch(eventsURL)\n       .then(res => res.json())\n       .then(events => dispatch(fetchedEvents(events)));\n   };\n}\n\n\n///UserEvent Actions\n\nexport function createUserEvent(ue) {\n  return { type: \"ADD_USER_EVENT\", ue };\n}\n\nexport function fetchedUserEvents(ues){\n  return { type: \"FETCHED_USER_EVENTS\", ues };\n}\n\nexport function loadingUserEvents() {\n  return { type: \"FETCHING_USER_EVENTS\" };\n}\n\n\nexport function fetchUserEvents(value) {\n  return dispatch => {\n     dispatch(loadingUserEvents());\n     fetch(userEventsURL)\n       .then(res => res.json())\n       .then(ues => dispatch(fetchedUserEvents(ues)));\n   };\n}\n\n\nexport function userEventDeleted(ue) {\n  return {\n    type: \"USER_EVENT_DELETED\", ue\n  };\n}\n\nexport function deleteUserEvent(ueId) {\n  return function(dispatch, getState) {\n    fetch(`${userEventsURL}/${ueId}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then( json => dispatch(userEventDeleted(json)));\n  };\n}\n\n\n\n\n//Post Actions\n\nexport function createPost(post) {\n  return { type: \"ADD_POST\", post };\n}\n\nexport function fetchedPosts(posts){\n  return { type: \"FETCHED_POSTS\", posts };\n}\n\nexport function loadingPosts() {\n  return { type: \"FETCHING_POSTS\" };\n}\n\nexport function postDeleted(post) {\n  return {\n    type: \"POST_DELETED\", post\n  };\n}\n\n\nexport function fetchPosts(value) {\n  return dispatch => {\n     dispatch(loadingPosts());\n     fetch(postsURL)\n       .then(res => res.json())\n       .then(posts => dispatch(fetchedPosts(posts)));\n   };\n}\n\n\n\nexport function deletePost(postId) {\n  return function(dispatch, getState) {\n    fetch(`${postsURL}/${postId}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then( json => dispatch(postDeleted(json)));\n  };\n}\n\n\n\n\n\n\n\n///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function login(email, password){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n\n\n\n\n\n//mapDispatchToProps to currentUser is in app and\n\n\n//dispatch fetchUser function to app\n\n\n///dispatch function to App\n\n\n\n\n\n\n\n\n// , getCurrentUser, setCurrentUser, logOutCurrentUser\n\n\n// export { changeSearchText, changeDropValue, resetDropValue, fetchUsers, fetchEvents, fetchUserEvents, fetchedEvents, fetchedUserEvents, createEvent, createUserEvent, createPost, fetchPosts, fetchedPosts, loadingPosts, updateEvent, eventUpdated, deleteEvent, loadingEvents, eventDeleted, deletePost, postDeleted };\n"]},"metadata":{},"sourceType":"module"}