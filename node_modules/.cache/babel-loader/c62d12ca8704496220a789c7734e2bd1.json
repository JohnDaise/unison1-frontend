{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigDetail.js\";\nimport React from \"react\";\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\nimport { Grid, Image, Loader, Button, Sticky } from 'semantic-ui-react';\nimport GigPlayerList from './GigPlayerList';\nimport GigPostList from './GigPostList'; // import PostList from './PostList';\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nvar GigDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GigDetail, _React$Component);\n\n  function GigDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {};\n\n    _this.handleContextRef = function (contextRef) {\n      return _this.setState({\n        contextRef: contextRef\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GigDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var contextRef = this.state.contextRef;\n      var weekday = {\n        0: \"Sunday\",\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\"\n      };\n      var gigs = this.props.users.find(function (user) {\n        return user.id === _this2.props.currentUser.id;\n      }).events;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(Loader, {\n        active: true,\n        inline: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }) : React.createElement(Grid, {\n        columns: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Sticky, {\n        context: contextRef,\n        pushing: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        computer: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        name: 'name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.props.gig.name), React.createElement(\"h4\", {\n        name: 'date',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" \", weekday[moment(this.props.gig.datetime).format('E')], \" \", moment(this.props.gig.datetime).format('MMMM DD YYYY')), React.createElement(\"h4\", {\n        name: 'time',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, moment(this.props.gig.datetime).format('h:mm a')), React.createElement(\"h4\", {\n        name: 'location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, this.props.gig.location), \"Notes: \", React.createElement(\"h4\", {\n        name: 'notes',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.gig.notes))), React.createElement(Grid.Column, {\n        className: \"post-col\",\n        textAlign: \"center\",\n        computer: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(GigPostList, {\n        currentUser: this.props.currentUser,\n        gig: this.props.gig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        computer: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(GigPlayerList, {\n        currentUser: this.props.currentUser,\n        gig: this.props.gig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return GigDetail;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  var player = state.users.find(function (user) {\n    return user.id === propsFromParent.currentUser.id;\n  });\n  var gig = state.events.find(function (gig) {\n    return gig.id === parseInt(propsFromParent.gigId);\n  });\n  var event = state.events.find(function (event) {\n    return event.id === gig.id;\n  }); /// this array is a player's gigs console.log(player.events)\n\n  return {\n    loading: state.loading,\n    events: state.events,\n    posts: state.posts,\n    users: state.users,\n    gig: gig,\n    event: event\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchPosts: fetchPosts\n})(withRouter(GigDetail)); ///need to make a different/parallel component to PostList called GigPostList so that gig details are rendered for players","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigDetail.js"],"names":["React","Link","Route","Switch","withRouter","connect","fetchEvents","fetchPosts","loading","Grid","Image","Loader","Button","Sticky","GigPlayerList","GigPostList","DatePicker","moment","GigDetail","state","handleContextRef","contextRef","setState","props","weekday","gigs","users","find","user","id","currentUser","events","gig","name","datetime","format","location","notes","Component","mapStateToProps","propsFromParent","player","parseInt","gigId","event","posts"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,UAA9B,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,OAAlC,QAAiD,wBAAjD;AAEA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,MAA9B,EAAsCC,MAAtC,QAAoD,mBAApD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,4CAAP;;IAMMC,S;;;;;;;;;;;;;;;;;UAONC,K,GAAQ,E;;UAEPC,gB,GAAmB,UAAAC,UAAU;AAAA,aAAI,MAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAVA;AAAF,OAAd,CAAJ;AAAA,K;;;;;;;wCAPX;AACjB,WAAKE,KAAL,CAAWjB,WAAX;AACA,WAAKiB,KAAL,CAAWhB,UAAX;AACD;;;6BAOU;AAAA;;AAAA,UACCc,UADD,GACgB,KAAKF,KADrB,CACCE,UADD;AAGP,UAAIG,OAAO,GAAG;AACb,WAAG,QADU;AAEb,WAAG,QAFU;AAGb,WAAG,SAHU;AAIb,WAAG,WAJU;AAKb,WAAG,UALU;AAMb,WAAG,QANU;AAOb,WAAG;AAPU,OAAd;AAWA,UAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,IAAjB,CAAsB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAY,MAAI,CAACN,KAAL,CAAWO,WAAX,CAAuBD,EAAvC;AAAA,OAA1B,EAAqEE,MAAhF;AAEE,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,KAAKR,KAAL,CAAWf,OAAX,GACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGJ,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAEa,UAAjB;AAA6B,QAAA,OAAO,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAgC,QAAA,QAAQ,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,IAAI,EAAE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB,KAAKE,KAAL,CAAWS,GAAX,CAAeC,IAAlC,CADF,EAEE;AAAI,QAAA,IAAI,EAAE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAoBT,OAAO,CAACP,MAAM,CAAC,KAAKM,KAAL,CAAWS,GAAX,CAAeE,QAAhB,CAAN,CAAgCC,MAAhC,CAAuC,GAAvC,CAAD,CAA3B,OAA2ElB,MAAM,CAAC,KAAKM,KAAL,CAAWS,GAAX,CAAeE,QAAhB,CAAN,CAAgCC,MAAhC,CAAuC,cAAvC,CAA3E,CAFF,EAGE;AAAI,QAAA,IAAI,EAAE,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoBlB,MAAM,CAAC,KAAKM,KAAL,CAAWS,GAAX,CAAeE,QAAhB,CAAN,CAAgCC,MAAhC,CAAuC,QAAvC,CAApB,CAHF,EAIE;AAAI,QAAA,IAAI,EAAE,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKZ,KAAL,CAAWS,GAAX,CAAeI,QAAvC,CAJF,aAKS;AAAI,QAAA,IAAI,EAAE,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqB,KAAKb,KAAL,CAAWS,GAAX,CAAeK,KAApC,CALT,CADA,CADF,EAUE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAE,UAAxB;AAAoC,QAAA,SAAS,EAAC,QAA9C;AAAuD,QAAA,QAAQ,EAAE,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,WAAD;AAAa,QAAA,WAAW,EAAE,KAAKd,KAAL,CAAWO,WAArC;AAAkD,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWS,GAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,CAVF,EAaE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAgC,QAAA,QAAQ,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWO,WAAvC;AAAoD,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWS,GAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,CAJA,CADF;AAwBH;;;;EApDqBhC,KAAK,CAACsC,S;;AAwD5B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACpB,KAAD,EAAQqB,eAAR,EAA4B;AAClD,MAAIC,MAAM,GAAGtB,KAAK,CAACO,KAAN,CAAYC,IAAZ,CAAiB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYW,eAAe,CAACV,WAAhB,CAA4BD,EAA5C;AAAA,GAArB,CAAb;AACA,MAAIG,GAAG,GAAGb,KAAK,CAACY,MAAN,CAAaJ,IAAb,CAAkB,UAAAK,GAAG;AAAA,WAAIA,GAAG,CAACH,EAAJ,KAAWa,QAAQ,CAACF,eAAe,CAACG,KAAjB,CAAvB;AAAA,GAArB,CAAV;AACA,MAAIC,KAAK,GAAIzB,KAAK,CAACY,MAAN,CAAaJ,IAAb,CAAmB,UAAAiB,KAAK;AAAA,WAAIA,KAAK,CAACf,EAAN,KAAaG,GAAG,CAACH,EAArB;AAAA,GAAxB,CAAb,CAHkD,CAIlD;;AACA,SAAO;AACLrB,IAAAA,OAAO,EAAEW,KAAK,CAACX,OADV;AAELuB,IAAAA,MAAM,EAAEZ,KAAK,CAACY,MAFT;AAGLc,IAAAA,KAAK,EAAE1B,KAAK,CAAC0B,KAHR;AAILnB,IAAAA,KAAK,EAAEP,KAAK,CAACO,KAJR;AAKLM,IAAAA,GAAG,EAAEA,GALA;AAMLY,IAAAA,KAAK,EAAEA;AANF,GAAP;AAQA,CAbF;;AAeC,eAAevC,OAAO,CACpBkC,eADoB,EAEpB;AAAEjC,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA;AAAf,CAFoB,CAAP,CAGbH,UAAU,CAACc,SAAD,CAHG,CAAf,C,CAMA","sourcesContent":["import React from \"react\";\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\n\nimport { Grid, Image, Loader, Button, Sticky } from 'semantic-ui-react';\nimport GigPlayerList from './GigPlayerList';\nimport GigPostList from './GigPostList';\n// import PostList from './PostList';\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\n\n\n\nclass GigDetail extends React.Component {\n\ncomponentDidMount(){\n  this.props.fetchEvents();\n  this.props.fetchPosts();\n}\n\nstate = {}\n\n handleContextRef = contextRef => this.setState({ contextRef })\n\n\n  render() {\n    const { contextRef } = this.state\n\n    let weekday = {\n     0: \"Sunday\",\n     1: \"Monday\",\n     2: \"Tuesday\",\n     3: \"Wednesday\",\n     4: \"Thursday\",\n     5: \"Friday\",\n     6: \"Saturday\",\n  }\n\n\n    let gigs = this.props.users.find(user => user.id === this.props.currentUser.id).events\n\n      return (\n        <React.Fragment>\n           {this.props.loading ?\n              <Loader active inline='centered' />\n             :\n        <Grid columns={3}>\n          <Sticky context={contextRef} pushing>\n          <Grid.Column textAlign='center' computer={3}>\n            <h3 name={'name'}>{this.props.gig.name}</h3>\n            <h4 name={'date'}> {weekday[moment(this.props.gig.datetime).format('E')]} {moment(this.props.gig.datetime).format('MMMM DD YYYY')}</h4>\n            <h4 name={'time'} >{moment(this.props.gig.datetime).format('h:mm a')}</h4>\n            <h4 name={'location'} >{this.props.gig.location}</h4>\n            Notes: <h4 name={'notes'} >{this.props.gig.notes}</h4>\n          </Grid.Column>\n          </Sticky>\n          <Grid.Column className={\"post-col\"} textAlign='center' computer={10}>\n             <GigPostList currentUser={this.props.currentUser} gig={this.props.gig} />\n          </Grid.Column>\n          <Grid.Column textAlign='center' computer={3}>\n            <GigPlayerList currentUser={this.props.currentUser} gig={this.props.gig} />\n          </Grid.Column>\n        </Grid>}\n        </React.Fragment>\n      )\n  }\n}\n\n\n  const mapStateToProps = (state, propsFromParent) => {\n    let player = state.users.find(user => user.id === propsFromParent.currentUser.id)\n    let gig = state.events.find(gig => gig.id === parseInt(propsFromParent.gigId))\n    let event =  state.events.find( event => event.id === gig.id)\n    /// this array is a player's gigs console.log(player.events)\n    return {\n      loading: state.loading,\n      events: state.events,\n      posts: state.posts,\n      users: state.users,\n      gig: gig,\n      event: event\n    };\n   };\n\n   export default connect(\n     mapStateToProps,\n     { fetchEvents, fetchPosts }\n   )(withRouter(GigDetail));\n\n\n   ///need to make a different/parallel component to PostList called GigPostList so that gig details are rendered for players\n"]},"metadata":{},"sourceType":"module"}