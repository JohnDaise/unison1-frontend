{"ast":null,"code":"var _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js\";\nimport React from \"react\";\nimport { Grid } from 'semantic-ui-react';\nimport Iframe from 'react-iframe';\n\nvar Post = function Post(props) {\n  //new post form creates an iframe element if it includes a url otherwise would just show post content\n  //-sets the src string and would need an id\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"//have a ternary here so that if post has url then will render iframe otherwise just post content of post\", React.createElement(\"iframe\", {\n    width: \"380\",\n    height: \"157\",\n    src: props.post.url,\n    frameborder: \"0\",\n    allow: \"autoplay; encrypted-media\",\n    allowfullscreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.post.content));\n};\n\nexport default Post; //\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js"],"names":["React","Grid","Iframe","Post","props","post","url","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAGxB;AACA;AAEE,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kHAEE;AAAQ,IAAA,KAAK,EAAC,KAAd;AACA,IAAA,MAAM,EAAC,KADP;AAEA,IAAA,GAAG,EAAEA,KAAK,CAACC,IAAN,CAAWC,GAFhB;AAGA,IAAA,WAAW,EAAC,GAHZ;AAIA,IAAA,KAAK,EAAC,2BAJN;AAKA,IAAA,eAAe,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,IAAN,CAAWE,OAAf,CARF,CADF;AAcD,CApBD;;AAwBA,eAAeJ,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Grid } from 'semantic-ui-react'\nimport Iframe from 'react-iframe'\n\n\n\nconst Post = (props) => {\n\n\n//new post form creates an iframe element if it includes a url otherwise would just show post content\n//-sets the src string and would need an id\n\n  return(\n    <React.Fragment>\n    //have a ternary here so that if post has url then will render iframe otherwise just post content of post\n      <iframe width=\"380\"\n      height=\"157\"\n      src={props.post.url}\n      frameborder=\"0\"\n      allow=\"autoplay; encrypted-media\"\n      allowfullscreen></iframe>\n      <p>{props.post.content}</p>\n    </React.Fragment>\n  )\n\n\n}\n\n\n\nexport default Post;\n\n//\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>\n"]},"metadata":{},"sourceType":"module"}