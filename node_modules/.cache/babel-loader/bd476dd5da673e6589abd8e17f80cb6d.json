{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigsList.js\";\nimport React from \"react\";\nimport GigListItem from './GigListItem';\nimport { connect } from \"react-redux\";\nimport { Grid, Loader, List, Button } from 'semantic-ui-react'; //map thru all userEvents that include currentUser id. those userEvents will have event ids\n\nvar GigsList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GigsList, _React$Component);\n\n  function GigsList() {\n    _classCallCheck(this, GigsList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GigsList).apply(this, arguments));\n  }\n\n  _createClass(GigsList, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var player = this.props.users.find(function (user) {\n        return user.id === _this.props.currentUser.id;\n      });\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(Loader, {\n        active: true,\n        inline: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }) : React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, this.props.currentUser ? player.events.filter(function (gig) {\n        return gig.user_id === props.currentUser.id;\n      }).map(function (gig) {\n        return React.createElement(List.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(GigListItem, {\n          gig: gig.event,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }));\n      }) : null));\n    }\n  }]);\n\n  return GigsList;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  var player = state.users.find(function (user) {\n    return user.id === propsFromParent.currentUser.id;\n  });\n\n  if (player) {\n    console.log(player.events);\n  }\n\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    userEvents: state.userEvents\n  };\n};\n\nexport default connect(mapStateToProps)(GigsList);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigsList.js"],"names":["React","GigListItem","connect","Grid","Loader","List","Button","GigsList","player","props","users","find","user","id","currentUser","loading","events","filter","gig","user_id","map","event","Component","mapStateToProps","state","propsFromParent","console","log","userEvents"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,MAA7B,QAA2C,mBAA3C,C,CAEA;;IACMC,Q;;;;;;;;;;;;;6BAGE;AAAA;;AACN,UAAIC,MAAM,GAAI,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,IAAjB,CAAsB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAY,KAAI,CAACJ,KAAL,CAAWK,WAAX,CAAuBD,EAAvC;AAAA,OAA1B,CAAd;AACF,aACM,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKJ,KAAL,CAAWM,OAAX,GACD,oBAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC,GAGD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKN,KAAL,CAAWK,WAAX,GACDN,MAAM,CAACQ,MAAP,CAAcC,MAAd,CAAqB,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,OAAJ,KAAgBV,KAAK,CAACK,WAAN,CAAkBD,EAAtC;AAAA,OAAxB,EAAkEO,GAAlE,CAAsE,UAAAF,GAAG;AAAA,eACxE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAW,oBAAC,WAAD;AAAa,UAAA,GAAG,EAAEA,GAAG,CAACG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAX,CADwE;AAAA,OAAzE,CADC,GAGE,IAJL,CAJF,CADN;AAaG;;;;EAlBoBrB,KAAK,CAACsB,S;;AAmB5B;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,eAAR,EAA4B;AAClD,MAAIjB,MAAM,GAAGgB,KAAK,CAACd,KAAN,CAAYC,IAAZ,CAAiB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYY,eAAe,CAACX,WAAhB,CAA4BD,EAA5C;AAAA,GAArB,CAAb;;AACA,MAAIL,MAAJ,EAAY;AACVkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAM,CAACQ,MAAnB;AACD;;AACD,SAAO;AACLD,IAAAA,OAAO,EAAES,KAAK,CAACT,OADV;AAELC,IAAAA,MAAM,EAAEQ,KAAK,CAACR,MAFT;AAGLN,IAAAA,KAAK,EAAEc,KAAK,CAACd,KAHR;AAILkB,IAAAA,UAAU,EAAEJ,KAAK,CAACI;AAJb,GAAP;AAMD,CAXD;;AAcA,eAAe1B,OAAO,CAACqB,eAAD,CAAP,CAAyBhB,QAAzB,CAAf","sourcesContent":["import React from \"react\";\n\nimport GigListItem  from './GigListItem'\nimport { connect } from \"react-redux\";\n\nimport { Grid, Loader, List, Button } from 'semantic-ui-react'\n\n//map thru all userEvents that include currentUser id. those userEvents will have event ids\nclass GigsList extends React.Component{\n\n\nrender(){\n  let player =  this.props.users.find(user => user.id === this.props.currentUser.id);\nreturn(\n      <React.Fragment>\n        {this.props.loading ?\n        <Loader active inline='centered' />\n      :\n        <List>\n          {this.props.currentUser ?\n          player.events.filter(gig => gig.user_id === props.currentUser.id).map(gig =>\n           <List.Item><GigListItem gig={gig.event} /></List.Item>\n         ) : null }\n       </List>}\n      </React.Fragment>\n    )\n  }\n};\n\nconst mapStateToProps = (state, propsFromParent) => {\n  let player = state.users.find(user => user.id === propsFromParent.currentUser.id)\n  if (player) {\n    console.log(player.events)\n  }\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    userEvents: state.userEvents\n  };\n};\n\n\nexport default connect(mapStateToProps)(GigsList);\n"]},"metadata":{},"sourceType":"module"}