{"ast":null,"code":"var usersURL = \"http://localhost:3001/users\";\nvar eventsURL = \"http://localhost:3001/events\";\nvar loginURL = \"http://localhost:3001/profile\";\n\nfunction changeSearchText(value) {\n  return {\n    type: \"CHANGE_SEARCH_TEXT\",\n    value: value\n  };\n} ///User Actions\n\n\nfunction fetchedUsers(users) {\n  return {\n    type: \"FETCHED_USERS\",\n    users: users\n  };\n}\n\nfunction loadingUsers() {\n  return {\n    type: \"FETCHING_USERS\"\n  };\n}\n\nfunction fetchUsers(value) {\n  return function (dispatch) {\n    dispatch(loadingUsers());\n    fetch(usersURL).then(function (res) {\n      return res.json();\n    }).then(function (users) {\n      return dispatch(fetchedUsers(users));\n    });\n  };\n} ///Event Actions\n\n\nfunction createEvent(event) {\n  return {\n    type: \"ADD_EVENT\",\n    payload: event\n  };\n}\n\nfunction fetchedEvents(events) {\n  return {\n    type: \"FETCHED_EVENTS\",\n    events: events\n  };\n}\n\nfunction loadingEvents() {\n  return {\n    type: \"FETCHING_EVENTS\"\n  };\n}\n\nfunction fetchEvents(value) {\n  return function (dispatch) {\n    dispatch(loadingEvents());\n    fetch(eventsURL).then(function (res) {\n      return res.json();\n    }).then(function (events) {\n      return dispatch(fetchedEvents(events));\n    });\n  };\n} // function increaseVotes(paintingId) {\n//   return function(dispatch, getState) {\n//     const votes = getState().paintings.find(\n//       painting => painting.id === paintingId\n//     ).votes;\n//     fetch(`${URL}/${paintingId}`, {\n//       method: \"PATCH\",\n//       body: JSON.stringify({\n//         votes: votes + 1\n//       }),\n//       headers: {\n//         \"Content-type\": \"application/json\",\n//         Accept: \"application/json\"\n//       }\n//     })\n//       .then(res => res.json())\n//       .then(painting => dispatch(paintingUpdated(painting)));\n//   };\n//   // return { type: \"INCREASE_VOTES\", paintingId };\n// }\n///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function getCurrentUser(){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n//mapDispatchToProps to currentUser is in app and\n//dispatch fetchUser function to app\n///dispatch function to App\n\n\nexport { changeSearchText, fetchUsers, fetchEvents, getCurrentUser, setCurrentUser, logOutCurrentUser };","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/redux/actions/index.js"],"names":["usersURL","eventsURL","loginURL","changeSearchText","value","type","fetchedUsers","users","loadingUsers","fetchUsers","dispatch","fetch","then","res","json","createEvent","event","payload","fetchedEvents","events","loadingEvents","fetchEvents","getCurrentUser","setCurrentUser","logOutCurrentUser"],"mappings":"AAAA,IAAMA,QAAQ,GAAG,6BAAjB;AACA,IAAMC,SAAS,GAAG,8BAAlB;AACA,IAAMC,QAAQ,GAAG,+BAAjB;;AAGA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,SAAO;AAAEC,IAAAA,IAAI,EAAE,oBAAR;AAA8BD,IAAAA,KAAK,EAAEA;AAArC,GAAP;AACD,C,CAED;;;AAEA,SAASE,YAAT,CAAsBC,KAAtB,EAA4B;AAC1B,SAAO;AAAEF,IAAAA,IAAI,EAAE,eAAR;AAAyBE,IAAAA,KAAK,EAALA;AAAzB,GAAP;AACD;;AAED,SAASC,YAAT,GAAwB;AACtB,SAAO;AAAEH,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;;AAGD,SAASI,UAAT,CAAoBL,KAApB,EAA2B;AACzB,SAAO,UAAAM,QAAQ,EAAI;AAChBA,IAAAA,QAAQ,CAACF,YAAY,EAAb,CAAR;AACAG,IAAAA,KAAK,CAACX,QAAD,CAAL,CACGY,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAL,KAAK;AAAA,aAAIG,QAAQ,CAACJ,YAAY,CAACC,KAAD,CAAb,CAAZ;AAAA,KAFb;AAGD,GALF;AAMD,C,CAID;;;AAEA,SAASQ,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO;AAAEX,IAAAA,IAAI,EAAE,WAAR;AAAqBY,IAAAA,OAAO,EAAED;AAA9B,GAAP;AACD;;AAED,SAASE,aAAT,CAAuBC,MAAvB,EAA8B;AAC5B,SAAO;AAAEd,IAAAA,IAAI,EAAE,gBAAR;AAA0Bc,IAAAA,MAAM,EAANA;AAA1B,GAAP;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,SAAO;AAAEf,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD;;AAGD,SAASgB,WAAT,CAAqBjB,KAArB,EAA4B;AAC1B,SAAO,UAAAM,QAAQ,EAAI;AAChBA,IAAAA,QAAQ,CAACU,aAAa,EAAd,CAAR;AACAT,IAAAA,KAAK,CAACV,SAAD,CAAL,CACGW,IADH,CACQ,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,KADX,EAEGF,IAFH,CAEQ,UAAAO,MAAM;AAAA,aAAIT,QAAQ,CAACQ,aAAa,CAACC,MAAD,CAAd,CAAZ;AAAA,KAFd;AAGD,GALF;AAMD,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAGA;AAGA;;;AAYA,SAAShB,gBAAT,EAA2BM,UAA3B,EAAuCY,WAAvC,EAAoDC,cAApD,EAAoEC,cAApE,EAAoFC,iBAApF","sourcesContent":["const usersURL = \"http://localhost:3001/users\";\nconst eventsURL = \"http://localhost:3001/events\";\nconst loginURL = \"http://localhost:3001/profile\"\n\n\nfunction changeSearchText(value) {\n  return { type: \"CHANGE_SEARCH_TEXT\", value: value };\n}\n\n///User Actions\n\nfunction fetchedUsers(users){\n  return { type: \"FETCHED_USERS\", users };\n}\n\nfunction loadingUsers() {\n  return { type: \"FETCHING_USERS\" };\n}\n\n\nfunction fetchUsers(value) {\n  return dispatch => {\n     dispatch(loadingUsers());\n     fetch(usersURL)\n       .then(res => res.json())\n       .then(users => dispatch(fetchedUsers(users)));\n   };\n}\n\n\n\n///Event Actions\n\nfunction createEvent(event) {\n  return { type: \"ADD_EVENT\", payload: event };\n}\n\nfunction fetchedEvents(events){\n  return { type: \"FETCHED_EVENTS\", events };\n}\n\nfunction loadingEvents() {\n  return { type: \"FETCHING_EVENTS\" };\n}\n\n\nfunction fetchEvents(value) {\n  return dispatch => {\n     dispatch(loadingEvents());\n     fetch(eventsURL)\n       .then(res => res.json())\n       .then(events => dispatch(fetchedEvents(events)));\n   };\n}\n\n\n\n// function increaseVotes(paintingId) {\n//   return function(dispatch, getState) {\n//     const votes = getState().paintings.find(\n//       painting => painting.id === paintingId\n//     ).votes;\n//     fetch(`${URL}/${paintingId}`, {\n//       method: \"PATCH\",\n//       body: JSON.stringify({\n//         votes: votes + 1\n//       }),\n//       headers: {\n//         \"Content-type\": \"application/json\",\n//         Accept: \"application/json\"\n//       }\n//     })\n//       .then(res => res.json())\n//       .then(painting => dispatch(paintingUpdated(painting)));\n//   };\n//   // return { type: \"INCREASE_VOTES\", paintingId };\n// }\n\n\n\n\n///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function getCurrentUser(){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n\n\n\n\n\n//mapDispatchToProps to currentUser is in app and\n\n\n//dispatch fetchUser function to app\n\n\n///dispatch function to App\n\n\n\n\n\n\n\n\n\n\n\nexport { changeSearchText, fetchUsers, fetchEvents, getCurrentUser, setCurrentUser, logOutCurrentUser};\n"]},"metadata":{},"sourceType":"module"}