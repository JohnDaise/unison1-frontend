{"ast":null,"code":"var _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigPlayerList.js\";\nimport React from \"react\";\nimport { Grid, List, Image, Icon } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchedEvents, loading } from \"../redux/actions/index\";\n\nvar GigPlayerList = function GigPlayerList(props) {\n  //each list item should be a link that renders a simple user details modal\n  return React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Users\")), React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Image, {\n    avatar: true,\n    src: props.organizer.pic_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(List.Header, {\n    as: \"a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.organizer.name), React.createElement(List.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"'Organizer'\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  })), props.players.map(function (p) {\n    return React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(Image, {\n      avatar: true,\n      src: p.pic_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }), React.createElement(List.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(List.Header, {\n      as: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, p.name), React.createElement(List.Description, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"'Player'\")));\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  var organizer = state.users.find(function (user) {\n    return user.id === parseInt(propsFromParent.currentUser.id);\n  });\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    organizer: organizer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchUsers: fetchUsers\n})(GigPlayerList);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigPlayerList.js"],"names":["React","Grid","List","Image","Icon","connect","fetchEvents","fetchUsers","fetchedEvents","loading","GigPlayerList","props","organizer","pic_url","name","players","map","p","mapStateToProps","state","propsFromParent","users","find","user","id","parseInt","currentUser","events"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,IAA5B,QAAwC,mBAAxC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,aAAlC,EAAiDC,OAAjD,QAAgE,wBAAhE;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAIjC;AACE,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAR,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,GAAG,EAAEA,KAAK,CAACC,SAAN,CAAgBC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,EAEM,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBF,KAAK,CAACC,SAAN,CAAgBE,IAArC,CADC,EAED,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFC,CAFN,EAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATH,CAFF,EAaGH,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAmB,UAAAC,CAAC;AAAA,WACnB,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,oBAAC,KAAD;AAAO,MAAA,MAAM,MAAb;AAAc,MAAA,GAAG,EAAEA,CAAC,CAACJ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADN,EAEM,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACD,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBI,CAAC,CAACH,IAAvB,CADC,EAED,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,CAFN,CADmB;AAAA,GAApB,CAbH,CADF;AAiCD,CAtCD;;AAyCA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,eAAR,EAA4B;AAClD,MAAIR,SAAS,GAAGO,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACL,eAAe,CAACM,WAAhB,CAA4BF,EAA7B,CAAxB;AAAA,GAArB,CAAhB;AACA,SAAO;AACLf,IAAAA,OAAO,EAAEU,KAAK,CAACV,OADV;AAELkB,IAAAA,MAAM,EAAER,KAAK,CAACQ,MAFT;AAGLN,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAHR;AAILT,IAAAA,SAAS,EAAEA;AAJN,GAAP;AAMD,CARD;;AAUA,eAAeP,OAAO,CACpBa,eADoB,EAEpB;AAAEZ,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA;AAAf,CAFoB,CAAP,CAGbG,aAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Grid, List, Image, Icon } from 'semantic-ui-react'\n\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchedEvents, loading } from \"../redux/actions/index\";\n\nconst GigPlayerList = (props) => {\n\n\n\n//each list item should be a link that renders a simple user details modal\n  return(\n    <List>\n      <strong><h1>Users</h1></strong>\n      <List.Item>\n            <Image avatar src={props.organizer.pic_url} />\n            <List.Content>\n           <List.Header as='a'>{props.organizer.name}</List.Header>\n           <List.Description>\n             'Organizer'\n           </List.Description>\n         </List.Content>\n         <br/>\n         <br/>\n      </List.Item>\n      {props.players.map( p=>\n        <List.Item>\n              <Image avatar src={p.pic_url} />\n              <List.Content>\n             <List.Header as='a'>{p.name}</List.Header>\n             <List.Description>\n               'Player'\n             </List.Description>\n           </List.Content>\n        </List.Item>\n      )}\n\n    </List>\n  )\n\n\n\n\n\n}\n\n\nconst mapStateToProps = (state, propsFromParent )=> {\n  let organizer = state.users.find(user => user.id === parseInt(propsFromParent.currentUser.id))\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    organizer: organizer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchEvents, fetchUsers }\n)(GigPlayerList);\n"]},"metadata":{},"sourceType":"module"}