{"ast":null,"code":"var _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsList.js\";\nimport React from \"react\";\nimport EventListItem from './EventListItem';\nimport { connect } from \"react-redux\";\nimport { Grid, Loader, List, Button } from 'semantic-ui-react';\n\nvar EventsList = function EventsList(props) {\n  return console.log(props.events), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, props.loading ? React.createElement(Loader, {\n    active: true,\n    inline: \"centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }) : React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, props.currentUser ? props.events.filter(function (event) {\n    return event.user_id === props.currentUser.id;\n  }).length === 0 ? React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"No Events Scheduled\") : props.events.filter(function (event) {\n    return event.user_id === props.currentUser.id;\n  }).sort(function (a, b) {\n    return a.datetime.localeCompare(b.datetime);\n  }).map(function (event) {\n    return React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(EventListItem, {\n      key: event.id,\n      event: event,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }));\n  }) : null));\n}; ///sort events by date\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    events: state.events\n  };\n};\n\nexport default connect(mapStateToProps)(EventsList);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsList.js"],"names":["React","EventListItem","connect","Grid","Loader","List","Button","EventsList","props","console","log","events","loading","currentUser","filter","event","user_id","id","length","sort","a","b","datetime","localeCompare","map","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,aAAP,MAA2B,iBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,MAA7B,QAA2C,mBAA3C;;AAGA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD;AAAA,SACjBC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB,GACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,OAAN,GACD,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,WAAN,GACCL,KAAK,CAACG,MAAN,CAAaG,MAAb,CAAoB,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAN,KAAkBR,KAAK,CAACK,WAAN,CAAkBI,EAAxC;AAAA,GAAzB,EAAsEC,MAAtE,KAAiF,CAAjF,GACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADA,GAEFV,KAAK,CAACG,MAAN,CAAaG,MAAb,CAAoB,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAN,KAAkBR,KAAK,CAACK,WAAN,CAAkBI,EAAxC;AAAA,GAAzB,EAAsEE,IAAtE,CAA2E,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACvF,WAAOD,CAAC,CAACE,QAAF,CAAWC,aAAX,CAAyBF,CAAC,CAACC,QAA3B,CAAP;AACE,GAFL,EAEOE,GAFP,CAEW,UAAAT,KAAK;AAAA,WACf,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAEA,KAAK,CAACE,EAA1B;AAA8B,MAAA,KAAK,EAAEF,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CADe;AAAA,GAFhB,CAHC,GAOE,IARL,CAJF,CAFa;AAAA,CAAnB,C,CAkBA;;;AACA,IAAMU,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLd,IAAAA,OAAO,EAAEc,KAAK,CAACd,OADV;AAELD,IAAAA,MAAM,EAAEe,KAAK,CAACf;AAFT,GAAP;AAID,CALD;;AAQA,eAAeT,OAAO,CAACuB,eAAD,CAAP,CAAyBlB,UAAzB,CAAf","sourcesContent":["import React from \"react\";\n\nimport EventListItem  from './EventListItem'\nimport { connect } from \"react-redux\";\n\nimport { Grid, Loader, List, Button } from 'semantic-ui-react'\n\n\nconst EventsList = (props) => (\n  console.log(props.events),\n      <React.Fragment>\n        {props.loading ?\n        <Loader active inline='centered' />\n      :\n        <List>\n          {props.currentUser ?\n            props.events.filter(event => event.user_id === props.currentUser.id ).length === 0 ?\n            <h1>No Events Scheduled</h1>:\n          props.events.filter(event => event.user_id === props.currentUser.id ).sort(function(a, b) {\n             return a.datetime.localeCompare(b.datetime);\n              }).map(event =>\n           <List.Item><EventListItem key={event.id} event={event} /></List.Item>\n         ) : null}\n       </List>}\n      </React.Fragment>\n);\n///sort events by date\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    events: state.events\n  };\n};\n\n\nexport default connect(mapStateToProps)(EventsList);\n"]},"metadata":{},"sourceType":"module"}