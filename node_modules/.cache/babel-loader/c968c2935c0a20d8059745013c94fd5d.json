{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigDetail.js\";\nimport React from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\nimport { Grid, Image, Loader, Button } from 'semantic-ui-react';\nimport PlayersList from './PlayersList'; // import PostList from './PostList';\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nvar GigDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GigDetail, _React$Component);\n\n  function GigDetail() {\n    _classCallCheck(this, GigDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GigDetail).apply(this, arguments));\n  }\n\n  _createClass(GigDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var weekday = {\n        0: \"Sunday\",\n        1: \"Monday\",\n        2: \"Tuesday\",\n        3: \"Wednesday\",\n        4: \"Thursday\",\n        5: \"Friday\",\n        6: \"Saturday\"\n      };\n      var gigs = this.props.users.find(function (user) {\n        return user.id === _this.props.currentUser.id;\n      });\n      console.log(gigs);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(Loader, {\n        active: true,\n        inline: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }) : React.createElement(Grid, {\n        columns: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        computer: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        name: 'name',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"\"), React.createElement(\"h2\", {\n        name: 'date',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \" \", weekday[moment().format('E')], \" \", moment().format('MMMM DD YYYY')), React.createElement(\"h2\", {\n        name: 'time',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, moment().format('h:mm a')), React.createElement(\"h2\", {\n        name: 'location',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), \"Notes: \", React.createElement(\"h2\", {\n        name: 'notes',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\")), React.createElement(Grid.Column, {\n        className: \"post-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"make a different/parallel component here to PostList called GigPostList\"), React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"make a different/parallel component here to PlayerList called GigPlayerList\")));\n    }\n  }]);\n\n  return GigDetail;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  var player = state.users.find(function (user) {\n    return user.id === propsFromParent.currentUser.id;\n  });\n  var gig = state.userEvents.find(function (gig) {\n    return gig.id === parseInt(propsFromParent.gigId);\n  });\n  var event = state.events.find(function (event) {\n    return event.id === gig.id;\n  }); /// this array is a player's gigs console.log(player.events)\n\n  return {\n    loading: state.loading,\n    events: state.events,\n    posts: state.posts,\n    users: state.users,\n    gig: gig,\n    event: event\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchPosts: fetchPosts\n})(GigDetail); ///need to make a different/parallel component to PostList called GigPostList so that gig details are rendered for players","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigDetail.js"],"names":["React","Link","Route","Switch","connect","fetchEvents","fetchPosts","loading","Grid","Image","Loader","Button","PlayersList","DatePicker","moment","GigDetail","props","weekday","gigs","users","find","user","id","currentUser","console","log","format","Component","mapStateToProps","state","propsFromParent","player","gig","userEvents","parseInt","gigId","event","events","posts"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, Route, Switch  } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\n\nimport { Grid, Image, Loader, Button } from 'semantic-ui-react';\nimport PlayersList from './PlayersList';\n// import PostList from './PostList';\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\n\n\n\nclass GigDetail extends React.Component {\n\ncomponentDidMount(){\n  this.props.fetchEvents();\n  this.props.fetchPosts();\n}\n\n\n  render() {\n\n    let weekday = {\n     0: \"Sunday\",\n     1: \"Monday\",\n     2: \"Tuesday\",\n     3: \"Wednesday\",\n     4: \"Thursday\",\n     5: \"Friday\",\n     6: \"Saturday\",\n  }\n\n\n    let gigs = this.props.users.find(user => user.id === this.props.currentUser.id)\n    console.log(gigs)\n      return (\n        <React.Fragment>\n           {this.props.loading ?\n              <Loader active inline='centered' />\n             :\n        <Grid columns={3}>\n          <Grid.Column textAlign='center' computer={4}>\n            <h1 name={'name'}>{\"\"}</h1>\n            <h2 name={'date'}> {weekday[moment().format('E')]} {moment().format('MMMM DD YYYY')}</h2>\n            <h2 name={'time'} >{moment().format('h:mm a')}</h2>\n            <h2 name={'location'} >{}</h2>\n            Notes: <h2 name={'notes'} >{\"\"}</h2>\n          </Grid.Column>\n          <Grid.Column className={\"post-col\"}>\n           make a different/parallel component here to PostList called GigPostList\n          </Grid.Column>\n          <Grid.Column textAlign='center'>\n          make a different/parallel component here to PlayerList called GigPlayerList\n          </Grid.Column>\n        </Grid>}\n        </React.Fragment>\n      )\n  }\n}\n\n\n  const mapStateToProps = (state, propsFromParent) => {\n    let player = state.users.find(user => user.id === propsFromParent.currentUser.id)\n    let gig = state.userEvents.find(gig => gig.id === parseInt(propsFromParent.gigId))\n    let event =  state.events.find( event => event.id === gig.id)\n    /// this array is a player's gigs console.log(player.events)\n    return {\n      loading: state.loading,\n      events: state.events,\n      posts: state.posts,\n      users: state.users,\n      gig: gig,\n      event: event\n    };\n   };\n\n   export default connect(\n     mapStateToProps,\n     { fetchEvents, fetchPosts }\n   )(GigDetail);\n\n\n   ///need to make a different/parallel component to PostList called GigPostList so that gig details are rendered for players\n"]},"metadata":{},"sourceType":"module"}