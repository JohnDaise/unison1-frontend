{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/PickEvent.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { changeDropValue, resetDropValue } from \"../redux/actions\";\nimport { Dropdown } from 'semantic-ui-react';\n\nvar PickEvent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PickEvent, _React$Component);\n\n  function PickEvent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PickEvent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PickEvent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selected: _this.props.value,\n      prevPropsDropValue: _this.props.value\n    };\n    return _this;\n  }\n\n  _createClass(PickEvent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Dropdown, {\n        fluid: true,\n        selection: true,\n        size: \"medium\",\n        onChange: function onChange(e, value) {\n          // e.persist();\n          _this2.props.onChange(value);\n        },\n        placeholder: \"Choose Event\",\n        name: \"choices\",\n        options: this.props.choices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      // Any time the current user changes,\n      // Reset any parts of state that are tied to that user.\n      // In this simple example, that's just the email.\n      if (props.value !== state.prevPropsDropValue) {\n        return {\n          prevPropsDropValue: props.value,\n          selected: props.value\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return PickEvent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  console.log(state);\n\n  function createObj(obj) {\n    return {\n      value: obj.name,\n      text: obj.name\n    };\n  }\n\n  var array = [{\n    value: '',\n    text: ''\n  }];\n  var userEvents = state.events.filter(function (event) {\n    return event.user_id === propsFromParent.currentUser.id;\n  });\n  var choices = array.concat(userEvents.map(function (event) {\n    return createObj(event);\n  }));\n  return {\n    loading: state.loading,\n    events: state.events,\n    userEvents: userEvents,\n    value: state.dropValue.value,\n    choices: choices,\n    selected: choices[0]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onChange: function onChange(value) {\n      return dispatch(changeDropValue(value));\n    },\n    reset: function reset(value) {\n      return dispatch(resetDropValue(value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PickEvent);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/PickEvent.js"],"names":["React","connect","changeDropValue","resetDropValue","Dropdown","PickEvent","state","selected","props","value","prevPropsDropValue","console","log","e","onChange","choices","Component","mapStateToProps","propsFromParent","createObj","obj","name","text","array","userEvents","events","filter","event","user_id","currentUser","id","concat","map","loading","dropValue","mapDispatchToProps","dispatch","reset"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { changeDropValue, resetDropValue } from \"../redux/actions\";\nimport { Dropdown } from 'semantic-ui-react'\n\n\n\nclass PickEvent extends React.Component {\n state={ selected: this.props.value,\n prevPropsDropValue: this.props.value\n };\n\n static getDerivedStateFromProps(props, state) {\n   // Any time the current user changes,\n   // Reset any parts of state that are tied to that user.\n   // In this simple example, that's just the email.\n   if (props.value !== state.prevPropsDropValue) {\n     return {\n       prevPropsDropValue: props.value,\n       selected: props.value\n     };\n   }\n   return null;\n }\n\n\n\n\n\n\nrender(){\n  console.log(this.state)\n  return(\n    <React.Fragment>\n        <Dropdown\n          fluid selection\n          size='medium'\n          onChange={(e, value )=> {\n            // e.persist();\n            this.props.onChange(value)}\n          }\n          placeholder='Choose Event'\n          name=\"choices\"\n          options={this.props.choices}\n        />\n    </React.Fragment>\n  )}\n}\n\n\nconst mapStateToProps = (state, propsFromParent) => {\n  console.log(state)\n  function createObj(obj){\n    return {value: obj.name, text: obj.name }\n  }\n  let array = [{ value: '' , text: '' }]\n  let userEvents = state.events.filter( event => event.user_id === propsFromParent.currentUser.id)\n  let choices = array.concat(userEvents.map( event => createObj(event)))\n\n  return {\n    loading: state.loading,\n    events: state.events,\n    userEvents: userEvents,\n    value: state.dropValue.value,\n    choices: choices,\n    selected: choices[0]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: value => dispatch(changeDropValue(value)),\n    reset: value => dispatch(resetDropValue(value))\n  };\n};\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PickEvent);\n"]},"metadata":{},"sourceType":"module"}