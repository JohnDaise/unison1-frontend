{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/UserCard.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Grid, Card, Button, Image, Icon } from 'semantic-ui-react';\nimport { addPlayerToEvent as _addPlayerToEvent, fetchEvents as _fetchEvents, createdUserEvent as _createdUserEvent } from \"../redux/actions/index\";\n\nvar UserCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserCard, _React$Component);\n\n  function UserCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.addPlayer = function (e) {\n      e.preventDefault();\n      var eventId = _this.props.event.id;\n      var playerId = _this.props.user.id;\n      var dropValue = _this.props.dropValue;\n      var event = _this.props.event;\n      var payload = {\n        eventId: eventId,\n        playerId: playerId,\n        dropValue: dropValue,\n        event: event\n      };\n\n      _this.props.addPlayerToEvent({\n        payload: payload\n      });\n\n      _this.props.fetchEvents(); ///do something here or above to re render UserList\n\n    };\n\n    return _this;\n  }\n\n  _createClass(UserCard, [{\n    key: \"render\",\n    // addPlayerToEvent = () => {\n    // //adjust logic and find a way to empty dropValue componentDidMount\n    //   if (this.props.dropValue.value && this.props.event){\n    //     let eventId = this.props.event.id\n    //     let playerId = this.props.user.id\n    //   if (this.props.event.users.map(user => user.id).includes(playerId)){\n    //     window.alert(\"Player already added\")\n    //   } else {\n    //   fetch(`http://localhost:3001/user_events/`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    //     'Content-Type': 'application/json',\n    //     Accept: \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //         user_id: playerId,\n    //         event_id: eventId\n    //       })\n    //   })\n    //     .then(r => r.json())\n    //       .then(json => console.log(json))\n    //   // this.props.fetchEvents();\n    //   this.props.openPlayerAddedModal()\n    //   }\n    // } else {\n    //  this.props.openWarningModal()\n    // }}\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.userEvents); // let eventId = this.props.event.id\n      // let playerId = this.props.user.id\n      //\n      // let payload = {\n      //   eventId: eventId,\n      //   playerId: playerId\n      // }\n      // console.log(event === undefined)\n\n      return React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.props.user.pic_url,\n        circular: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        as: \"h3\",\n        id: this.props.user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, this.props.user.name), React.createElement(Icon, {\n        name: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), \" \", this.props.user.email, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        name: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), \" \", this.props.user.phone_number, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        name: \"file alternate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), \" \", this.props.user.bio), this.props.event === undefined ? null : // this.props.event.users.map( player => player.id).includes(this.props.user.id)\n      this.props.user.events.map(function (event) {\n        return event.id;\n      }).includes(this.props.event.id) ? null : React.createElement(Button, {\n        onClick: function onClick(e) {\n          // this.props.addPlayerToEvent()\n          _this2.addPlayer(e);\n        } //add a function here that will listen for change in the event and re render\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Add Player\")));\n    }\n  }]);\n\n  return UserCard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  var event = state.events.find(function (event) {\n    return event.name === state.dropValue.value;\n  });\n  return {\n    loading: state.loading,\n    events: state.events,\n    event: event,\n    users: state.users,\n    userEvents: state.userEvents,\n    dropValue: state.dropValue.value\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addPlayerToEvent: function addPlayerToEvent(value) {\n      return dispatch(_addPlayerToEvent(value));\n    },\n    fetchEvents: function fetchEvents(value) {\n      return dispatch(_fetchEvents(value));\n    },\n    createdUserEvent: function createdUserEvent(ue) {\n      return dispatch(_createdUserEvent(ue));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCard);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/UserCard.js"],"names":["React","connect","Grid","Card","Button","Image","Icon","addPlayerToEvent","fetchEvents","createdUserEvent","UserCard","addPlayer","e","preventDefault","eventId","props","event","id","playerId","user","dropValue","payload","console","log","userEvents","pic_url","name","email","phone_number","bio","undefined","events","map","includes","Component","mapStateToProps","state","propsFromParent","find","value","loading","users","mapDispatchToProps","dispatch","ue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Grid, Card, Button, Image, Icon } from 'semantic-ui-react';\nimport { addPlayerToEvent, fetchEvents, createdUserEvent } from \"../redux/actions/index\";\n\n\n\n\n\nclass UserCard extends React.Component {\n\n  // componentDidMount(){\n  //   this.props.fetchEvents()\n  // }\n\naddPlayer = (e) => {\n  e.preventDefault();\n  let eventId = this.props.event.id\n  let playerId = this.props.user.id\n  let dropValue = this.props.dropValue\n  let event = this.props.event\n  let payload = {\n    eventId: eventId,\n    playerId: playerId,\n    dropValue: dropValue,\n    event: event\n  }\n  this.props.addPlayerToEvent({payload})\n  this.props.fetchEvents()///do something here or above to re render UserList\n}\n\n// addPlayerToEvent = () => {\n// //adjust logic and find a way to empty dropValue componentDidMount\n//   if (this.props.dropValue.value && this.props.event){\n//     let eventId = this.props.event.id\n//     let playerId = this.props.user.id\n//   if (this.props.event.users.map(user => user.id).includes(playerId)){\n//     window.alert(\"Player already added\")\n//   } else {\n//   fetch(`http://localhost:3001/user_events/`, {\n//   method: \"POST\",\n//   headers: {\n//     Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//     'Content-Type': 'application/json',\n//     Accept: \"application/json\"\n//   },\n//   body: JSON.stringify({\n//         user_id: playerId,\n//         event_id: eventId\n//       })\n//   })\n//     .then(r => r.json())\n//       .then(json => console.log(json))\n//   // this.props.fetchEvents();\n//   this.props.openPlayerAddedModal()\n//   }\n// } else {\n//  this.props.openWarningModal()\n// }}\n\n\nrender(){\n  console.log(this.props.userEvents)\n  // let eventId = this.props.event.id\n  // let playerId = this.props.user.id\n  //\n  // let payload = {\n  //   eventId: eventId,\n  //   playerId: playerId\n  // }\n  // console.log(event === undefined)\n  return(\n    <Grid.Column>\n    <Card>\n      <Card.Content>\n        <Image src={this.props.user.pic_url} circular size=\"small\"/>\n          <br/>\n          <br/>\n        <Card.Header as='h3' id={this.props.user.id}  >{this.props.user.name}</Card.Header>\n        <Icon name=\"envelope\"/> {this.props.user.email}<br/>\n        <Icon name=\"phone\"/> {this.props.user.phone_number}<br/>\n        <Icon name=\"file alternate\"/> {this.props.user.bio}\n      </Card.Content>\n      {this.props.event === undefined ? null :\n        // this.props.event.users.map( player => player.id).includes(this.props.user.id)\n            this.props.user.events.map( event => event.id ).includes(this.props.event.id) ? null :\n          <Button\n            onClick={(e)=> {\n              // this.props.addPlayerToEvent()\n              this.addPlayer(e)\n            }//add a function here that will listen for change in the event and re render\n            }>Add Player</Button>\n          }\n    </Card>\n    </Grid.Column>\n  )\n  }\n}\n\nconst mapStateToProps = (state, propsFromParent) => {\n  let event = state.events.find( event => event.name === state.dropValue.value)\n  return {\n    loading: state.loading,\n    events: state.events,\n    event: event,\n    users: state.users,\n    userEvents: state.userEvents,\n    dropValue: state.dropValue.value\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPlayerToEvent: value => dispatch(addPlayerToEvent(value)),\n    fetchEvents: value => dispatch(fetchEvents(value)),\n    createdUserEvent: ue => dispatch(createdUserEvent(ue))\n  };\n};\n\n\n\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCard);\n"]},"metadata":{},"sourceType":"module"}