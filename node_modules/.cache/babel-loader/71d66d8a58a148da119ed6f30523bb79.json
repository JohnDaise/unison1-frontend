{"ast":null,"code":"var usersURL = \"http://localhost:3001/users\";\nvar eventsURL = \"http://localhost:3001/events\";\nvar userEventsURL = \"http://localhost:3001/user_events\";\nvar postsURL = \"http://localhost:3001/posts\"; // const loginURL = \"http://localhost:3001/profile\"\n\nexport function changeSearchText(value) {\n  return {\n    type: \"CHANGE_SEARCH_TEXT\",\n    value: value\n  };\n}\nexport function changeDropValue(value) {\n  return {\n    type: \"CHANGE_DROP_VALUE\",\n    value: value\n  };\n}\nexport function changeRouter(change) {\n  return {\n    type: \"ROUTER_CHANGE\",\n    change: change\n  };\n}\n; ///User Actions\n\nexport function fetchedUsers(users) {\n  return {\n    type: \"FETCHED_USERS\",\n    users: users\n  };\n}\nexport function loadingUsers() {\n  return {\n    type: \"FETCHING_USERS\"\n  };\n}\nexport function fetchUsers(value) {\n  return function (dispatch) {\n    dispatch(loadingUsers());\n    fetch(usersURL).then(function (res) {\n      return res.json();\n    }).then(function (users) {\n      return dispatch(fetchedUsers(users));\n    });\n  };\n} ///Event Actions\n\nexport function createEvent(event) {\n  return {\n    type: \"ADD_EVENT\",\n    event: event\n  };\n}\nexport function eventUpdated(event) {\n  return {\n    type: \"EVENT_UPDATED\",\n    event: event\n  };\n}\nexport function updateEvent(_ref) {\n  var payload = _ref.payload,\n      eventId = _ref.eventId;\n  return function (dispatch, getState) {\n    // const organizer = getState().events.find(event => event.id === eventId).user;\n    var data = {\n      name: payload.name,\n      location: payload.location,\n      datetime: payload.startDate,\n      notes: payload.notes\n    };\n    fetch(\"\".concat(eventsURL, \"/\").concat(eventId), {\n      method: \"PATCH\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (event) {\n      return dispatch(eventUpdated(event));\n    });\n  };\n}\n;\nexport function eventDeleted(event) {\n  return {\n    type: \"EVENT_DELETED\",\n    event: event\n  };\n}\nexport function deleteEvent(eventId) {\n  return function (dispatch, getState) {\n    fetch(\"\".concat(eventsURL, \"/\").concat(eventId), {\n      method: \"DELETE\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return dispatch(eventDeleted(json));\n    });\n  };\n}\nexport function fetchedEvents(events) {\n  return {\n    type: \"FETCHED_EVENTS\",\n    events: events\n  };\n}\nexport function loadingEvents() {\n  return {\n    type: \"FETCHING_EVENTS\"\n  };\n}\nexport function fetchEvents(value) {\n  return function (dispatch) {\n    dispatch(loadingEvents());\n    fetch(eventsURL).then(function (res) {\n      return res.json();\n    }).then(function (events) {\n      return dispatch(fetchedEvents(events));\n    });\n  };\n} ///UserEvent Actions\n\nexport function createUserEvent(ue) {\n  return {\n    type: \"ADD_USER_EVENT\",\n    ue: ue\n  };\n}\nexport function fetchedUserEvents(ues) {\n  return {\n    type: \"FETCHED_USER_EVENTS\",\n    ues: ues\n  };\n}\nexport function loadingUserEvents() {\n  return {\n    type: \"FETCHING_USER_EVENTS\"\n  };\n}\nexport function fetchUserEvents(value) {\n  return function (dispatch) {\n    dispatch(loadingUserEvents());\n    fetch(userEventsURL).then(function (res) {\n      return res.json();\n    }).then(function (ues) {\n      return dispatch(fetchedUserEvents(ues));\n    });\n  };\n}\nexport function addPlayerToEvent(_ref2) {\n  var payload = _ref2.payload;\n  return function (dispatch, getState) {\n    var data = {\n      eventId: payload.eventId,\n      playerId: payload.playerId,\n      dropValue: payload.dropValue,\n      event: payload.event\n    };\n\n    if (data.dropValue.value && data.event) {\n      if (data.event.users.map(function (user) {\n        return user.id;\n      }).includes(data.playerId)) {\n        window.alert(\"Player already added\");\n      } else {\n        fetch(\"http://localhost:3001/user_events/\", {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \".concat(localStorage.getItem(\"token\")),\n            'Content-Type': 'application/json',\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify(data)\n        }).then(function (r) {\n          return r.json();\n        }).then(function (ue) {\n          return dispatch(createUserEvent(ue));\n        }); // this.props.fetchEvents();\n\n        window.alert(\"Player Added\");\n      }\n    } else {\n      window.alert(\"Player Maybe Added\");\n    }\n\n    ;\n  };\n}\n;\nexport function createdUserEvent(ue) {\n  return {\n    type: \"USER_EVENT_CREATED\",\n    ue: ue\n  };\n}\nexport function userEventDeleted(ue) {\n  return {\n    type: \"USER_EVENT_DELETED\",\n    ue: ue\n  };\n}\nexport function deleteUserEvent(ueId) {\n  return function (dispatch, getState) {\n    fetch(\"\".concat(userEventsURL, \"/\").concat(ueId), {\n      method: \"DELETE\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return dispatch(userEventDeleted(json));\n    });\n  };\n} //Post Actions\n\nexport function createPost(post) {\n  return {\n    type: \"ADD_POST\",\n    post: post\n  };\n}\nexport function fetchedPosts(posts) {\n  return {\n    type: \"FETCHED_POSTS\",\n    posts: posts\n  };\n}\nexport function loadingPosts() {\n  return {\n    type: \"FETCHING_POSTS\"\n  };\n}\nexport function postDeleted(post) {\n  return {\n    type: \"POST_DELETED\",\n    post: post\n  };\n}\nexport function fetchPosts(value) {\n  return function (dispatch) {\n    dispatch(loadingPosts());\n    fetch(postsURL).then(function (res) {\n      return res.json();\n    }).then(function (posts) {\n      return dispatch(fetchedPosts(posts));\n    });\n  };\n}\nexport function deletePost(postId) {\n  return function (dispatch, getState) {\n    fetch(\"\".concat(postsURL, \"/\").concat(postId), {\n      method: \"DELETE\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      return dispatch(postDeleted(json));\n    });\n  };\n} ///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function login(email, password){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n//mapDispatchToProps to currentUser is in app and\n//dispatch fetchUser function to app\n///dispatch function to App\n// , getCurrentUser, setCurrentUser, logOutCurrentUser\n// export { changeSearchText, changeDropValue, resetDropValue, fetchUsers, fetchEvents, fetchUserEvents, fetchedEvents, fetchedUserEvents, createEvent, createUserEvent, createPost, fetchPosts, fetchedPosts, loadingPosts, updateEvent, eventUpdated, deleteEvent, loadingEvents, eventDeleted, deletePost, postDeleted };","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/redux/actions/index.js"],"names":["usersURL","eventsURL","userEventsURL","postsURL","changeSearchText","value","type","changeDropValue","changeRouter","change","fetchedUsers","users","loadingUsers","fetchUsers","dispatch","fetch","then","res","json","createEvent","event","eventUpdated","updateEvent","payload","eventId","getState","data","name","location","datetime","startDate","notes","method","body","JSON","stringify","headers","Accept","eventDeleted","deleteEvent","fetchedEvents","events","loadingEvents","fetchEvents","createUserEvent","ue","fetchedUserEvents","ues","loadingUserEvents","fetchUserEvents","addPlayerToEvent","playerId","dropValue","map","user","id","includes","window","alert","Authorization","localStorage","getItem","r","createdUserEvent","userEventDeleted","deleteUserEvent","ueId","createPost","post","fetchedPosts","posts","loadingPosts","postDeleted","fetchPosts","deletePost","postId"],"mappings":"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","sourcesContent":["const usersURL = \"http://localhost:3001/users\";\nconst eventsURL = \"http://localhost:3001/events\";\nconst userEventsURL = \"http://localhost:3001/user_events\";\nconst postsURL = \"http://localhost:3001/posts\"\n// const loginURL = \"http://localhost:3001/profile\"\n\n\n\nexport function changeSearchText(value) {\n  return { type: \"CHANGE_SEARCH_TEXT\", value: value };\n}\n\nexport function changeDropValue(value) {\n  return { type: \"CHANGE_DROP_VALUE\", value: value}\n}\n\n\n\nexport function changeRouter(change){\n  return {type: \"ROUTER_CHANGE\", change}\n};\n\n\n\n///User Actions\n\nexport function fetchedUsers(users){\n  return { type: \"FETCHED_USERS\", users };\n}\n\nexport function loadingUsers() {\n  return { type: \"FETCHING_USERS\" };\n}\n\n\nexport function fetchUsers(value) {\n  return dispatch => {\n     dispatch(loadingUsers());\n     fetch(usersURL)\n       .then(res => res.json())\n       .then(users => dispatch(fetchedUsers(users)));\n   };\n}\n\n\n\n\n///Event Actions\n\nexport function createEvent(event) {\n  return { type: \"ADD_EVENT\", event };\n}\n\n\nexport function eventUpdated(event) {\n  return { type: \"EVENT_UPDATED\", event };\n}\n\n\nexport function updateEvent({ payload, eventId }) {\n  return function(dispatch, getState) {\n    // const organizer = getState().events.find(event => event.id === eventId).user;\n    let data = {\n      name: payload.name,\n      location: payload.location,\n      datetime: payload.startDate,\n      notes: payload.notes\n    };\n    fetch(`${eventsURL}/${eventId}`, {\n      method: \"PATCH\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(event => dispatch(eventUpdated(event)));\n  };\n};\n\n\nexport function eventDeleted(event) {\n  return {\n    type: \"EVENT_DELETED\", event\n  };\n}\n\nexport function deleteEvent(eventId) {\n  return function(dispatch, getState) {\n    fetch(`${eventsURL}/${eventId}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then( json => dispatch(eventDeleted(json)));\n  };\n}\n\n\nexport function fetchedEvents(events){\n  return { type: \"FETCHED_EVENTS\", events };\n}\n\nexport function loadingEvents() {\n  return { type: \"FETCHING_EVENTS\" };\n}\n\n\nexport function fetchEvents(value) {\n  return dispatch => {\n     dispatch(loadingEvents());\n     fetch(eventsURL)\n       .then(res => res.json())\n       .then(events => dispatch(fetchedEvents(events)));\n   };\n}\n\n\n///UserEvent Actions\n\nexport function createUserEvent(ue) {\n  return { type: \"ADD_USER_EVENT\", ue };\n}\n\nexport function fetchedUserEvents(ues){\n  return { type: \"FETCHED_USER_EVENTS\", ues };\n}\n\nexport function loadingUserEvents() {\n  return { type: \"FETCHING_USER_EVENTS\" };\n}\n\n\nexport function fetchUserEvents(value) {\n  return dispatch => {\n     dispatch(loadingUserEvents());\n     fetch(userEventsURL)\n       .then(res => res.json())\n       .then(ues => dispatch(fetchedUserEvents(ues)));\n   };\n}\n\nexport function addPlayerToEvent({ payload }){\n  return function(dispatch, getState){\n  let data = {\n    eventId: payload.eventId,\n    playerId: payload.playerId,\n    dropValue: payload.dropValue,\n    event: payload.event\n  };\n  if (data.dropValue.value && data.event){\n    if (data.event.users.map(user => user.id).includes(data.playerId)){\n      window.alert(\"Player already added\")\n      } else {\n        fetch(`http://localhost:3001/user_events/`, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n            'Content-Type': 'application/json',\n            Accept: \"application/json\"\n          },\n          body: JSON.stringify(data)\n        })\n        .then(r => r.json())\n        .then(ue => dispatch(createUserEvent(ue)))\n        // this.props.fetchEvents();\n        window.alert(\"Player Added\")\n      }\n} else {\n window.alert(\"Player Maybe Added\")\n    };\n  };\n};\n\nexport function createdUserEvent(ue) {\n  return {\n    type: \"USER_EVENT_CREATED\", ue\n  };\n}\n\n\n\n\n\nexport function userEventDeleted(ue) {\n  return {\n    type: \"USER_EVENT_DELETED\", ue\n  };\n}\n\nexport function deleteUserEvent(ueId) {\n  return function(dispatch, getState) {\n    fetch(`${userEventsURL}/${ueId}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then( json => dispatch(userEventDeleted(json)));\n  };\n}\n\n\n\n\n//Post Actions\n\nexport function createPost(post) {\n  return { type: \"ADD_POST\", post };\n}\n\nexport function fetchedPosts(posts){\n  return { type: \"FETCHED_POSTS\", posts };\n}\n\nexport function loadingPosts() {\n  return { type: \"FETCHING_POSTS\" };\n}\n\nexport function postDeleted(post) {\n  return {\n    type: \"POST_DELETED\", post\n  };\n}\n\n\nexport function fetchPosts(value) {\n  return dispatch => {\n     dispatch(loadingPosts());\n     fetch(postsURL)\n       .then(res => res.json())\n       .then(posts => dispatch(fetchedPosts(posts)));\n   };\n}\n\n\n\nexport function deletePost(postId) {\n  return function(dispatch, getState) {\n    fetch(`${postsURL}/${postId}`, {\n      method: \"DELETE\"\n    })\n      .then(res => res.json())\n      .then( json => dispatch(postDeleted(json)));\n  };\n}\n\n\n\n\n\n\n\n///Login Actions\n// function setCurrentUser(currentUser){\n//   return { type: \"SET_USER\", currentUser };\n// }\n//\n// function logOutCurrentUser(currentUser){\n//   return { type: \"FORGET_USER\" };\n// }\n//\n//\n// function login(email, password){\n//     return function(dispatch, getState){\n//         fetch(loginURL, {\n//           method: \"GET\",\n//           headers: {\n//             Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n//           }\n//         }).then(res => {\n//           if (res.status === 401) {\n//             dispatch(alert(\"login failed\"));// dispatch\n//           } else {\n//             return res.json(); //getState\n//           }\n//         }).then(currentUser => dispatch(setCurrentUser(currentUser)));\n//     }\n//   }\n//\n\n\n\n\n\n//mapDispatchToProps to currentUser is in app and\n\n\n//dispatch fetchUser function to app\n\n\n///dispatch function to App\n\n\n\n\n\n\n\n\n// , getCurrentUser, setCurrentUser, logOutCurrentUser\n\n\n// export { changeSearchText, changeDropValue, resetDropValue, fetchUsers, fetchEvents, fetchUserEvents, fetchedEvents, fetchedUserEvents, createEvent, createUserEvent, createPost, fetchPosts, fetchedPosts, loadingPosts, updateEvent, eventUpdated, deleteEvent, loadingEvents, eventDeleted, deletePost, postDeleted };\n"]},"metadata":{},"sourceType":"module"}