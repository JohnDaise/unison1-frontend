{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsContainer.js\";\nimport React from \"react\";\nimport NewEventForm from './NewEventForm';\nimport EventsList from './EventsList';\nimport { connect } from \"react-redux\";\nimport { fetchUsers, fetchUserEvents, fetchPosts, fetchedEvents } from \"../redux/actions/index\";\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Container, Grid, Loader } from 'semantic-ui-react';\n\nvar EventsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EventsContainer, _React$Component);\n\n  function EventsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, EventsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EventsContainer).call(this, props));\n\n    _this.closeEventFormModal = function () {\n      _this.setState({\n        isNewEventFormModalOpen: false\n      });\n    };\n\n    _this.openEventFormModal = function () {\n      _this.setState({\n        isNewEventFormModalOpen: true\n      });\n    };\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n    };\n\n    _this.state = {\n      startDate: moment(),\n      isNewEventFormModalOpen: false,\n      isUpdateEventFormModalOpen: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(EventsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchUsers();\n      this.props.fetchPosts();\n      this.props.fetchUserEvents();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var myevents = this.props.events.filter(function (event) {\n        return event.user.id === _this2.props.currentUser.id;\n      });\n      console.log(myevents);\n      return React.createElement(Grid, {\n        columns: 2,\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        computer: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(NewEventForm, {\n        currentUser: this.props.currentUser,\n        fetchEvents: this.props.fetchEvents,\n        closeEventFormModal: this.closeEventFormModal,\n        openEventFormModal: this.openEventFormModal,\n        isNewEventFormModalOpen: this.state.isNewEventFormModalOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(EventsList, {\n        currentUser: this.props.currentUser,\n        fetchEvents: this.props.fetchEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        computer: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Container, {\n        textAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), myevents ? React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        highlightDates: myevents.map(function (event) {\n          return moment(event.datetime);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }) : null)));\n    }\n  }]);\n\n  return EventsContainer;\n}(React.Component);\n\n;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchUsers: fetchUsers,\n  fetchPosts: fetchPosts,\n  fetchUserEvents: fetchUserEvents\n})(EventsContainer); // <Switch>\n// <Route\n//   path=\"/myevents/:eventId\"\n//   render={data => {\n//     let singleEvent = this.state.events.find(\n//       event => event.id === data.match.params.eventId\n//     );\n//     return <EventDetail singleEvent={singleEvent}/>;\n//     }}\n//     />\n//   <Route\n//     path=\"/\"\n//     render={() => (\n//       <EventsList />\n//     )}\n//     />\n// </Switch>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/EventsContainer.js"],"names":["React","NewEventForm","EventsList","connect","fetchUsers","fetchUserEvents","fetchPosts","fetchedEvents","DatePicker","moment","Container","Grid","Loader","EventsContainer","props","closeEventFormModal","setState","isNewEventFormModalOpen","openEventFormModal","handleClick","e","preventDefault","state","startDate","isUpdateEventFormModalOpen","handleChange","bind","fetchEvents","date","myevents","events","filter","event","user","id","currentUser","console","log","map","datetime","Component","mapStateToProps","loading","users"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NewEventForm from './NewEventForm'\n\nimport EventsList from './EventsList'\n\nimport { connect } from \"react-redux\";\nimport { fetchUsers, fetchUserEvents, fetchPosts, fetchedEvents } from \"../redux/actions/index\";\n\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { Container, Grid, Loader } from 'semantic-ui-react'\n\n\nclass EventsContainer extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      startDate: moment(),\n      isNewEventFormModalOpen: false,\n      isUpdateEventFormModalOpen: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchUsers();\n      this.props.fetchPosts();\n      this.props.fetchUserEvents();\n    }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n\n\n\ncloseEventFormModal = () => {\n  this.setState({\n    isNewEventFormModalOpen: false\n  })\n}\n\nopenEventFormModal = () => {\n  this.setState({\n    isNewEventFormModalOpen: true\n  })\n}\n\n\n  handleClick= (e) => {\n     e.preventDefault();\n   }\n\n  render(){\n    let myevents = this.props.events.filter( event => event.user.id === this.props.currentUser.id)\n    console.log(myevents)\n    return (\n      <Grid columns={2} divided>\n        <Grid.Column textAlign='center' computer={12}>\n          <br/>\n          <br/>\n          <NewEventForm\n            currentUser={this.props.currentUser}\n            fetchEvents={this.props.fetchEvents}\n            closeEventFormModal={this.closeEventFormModal}\n            openEventFormModal={this.openEventFormModal}\n            isNewEventFormModalOpen={this.state.isNewEventFormModalOpen}\n             />\n             <br/>\n             <br/>\n          <EventsList currentUser={this.props.currentUser} fetchEvents={this.props.fetchEvents}  />\n        </Grid.Column>\n        <Grid.Column computer={4}>\n          <Container textAlign='left'>\n            <br/>\n            <br/>\n            { myevents ?\n              <DatePicker\n                selected={this.state.startDate}\n                highlightDates={myevents.map(event => moment(event.datetime))}\n              /> : null }\n          </Container>\n        </Grid.Column>\n      </Grid>\n    )}\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchEvents, fetchUsers, fetchPosts, fetchUserEvents }\n)(EventsContainer);\n\n// <Switch>\n// <Route\n//   path=\"/myevents/:eventId\"\n//   render={data => {\n//     let singleEvent = this.state.events.find(\n//       event => event.id === data.match.params.eventId\n//     );\n//     return <EventDetail singleEvent={singleEvent}/>;\n//     }}\n//     />\n//   <Route\n//     path=\"/\"\n//     render={() => (\n//       <EventsList />\n//     )}\n//     />\n// </Switch>\n"]},"metadata":{},"sourceType":"module"}