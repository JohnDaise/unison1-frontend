{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/containers/GigsContainer.js\";\nimport React from \"react\";\nimport GigsList from '../components/GigsList';\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchPosts, fetchUserEvents } from \"../redux/actions/index\";\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Container, Grid } from 'semantic-ui-react';\n\nvar GigsContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GigsContainer, _React$Component);\n\n  function GigsContainer(props) {\n    var _this;\n\n    _classCallCheck(this, GigsContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GigsContainer).call(this, props));\n\n    _this.closeEventFormModal = function () {\n      _this.setState({\n        isNewEventFormModalOpen: false\n      });\n    };\n\n    _this.openEventFormModal = function () {\n      _this.setState({\n        isNewEventFormModalOpen: true\n      });\n    };\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n    };\n\n    _this.state = {\n      startDate: moment(),\n      isNewEventFormModalOpen: false,\n      isUpdateEventFormModalOpen: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(GigsContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchUsers();\n      this.props.fetchPosts();\n      this.props.fetchUserEvents();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var player = this.props.users.find(function (user) {\n        return user.id === _this2.props.currentUser.id;\n      });\n      return React.createElement(Grid, {\n        columns: 2,\n        divided: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        computer: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(GigsList, {\n        currentUser: this.props.currentUser,\n        fetchEvents: this.props.fetchEvents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(Grid.Column, {\n        computer: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Container, {\n        textAlign: \"left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), player ? React.createElement(DatePicker, {\n        selected: this.state.startDate,\n        onChange: this.handleChange,\n        highlightDates: player.events.map(function (event) {\n          return moment(event.datetime);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }) : null)));\n    }\n  }]);\n\n  return GigsContainer;\n}(React.Component);\n\n; // player.events.map(event => moment(event.datetime))\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchUsers: fetchUsers,\n  fetchPosts: fetchPosts,\n  fetchUserEvents: fetchUserEvents\n})(GigsContainer);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/containers/GigsContainer.js"],"names":["React","GigsList","connect","fetchEvents","fetchUsers","fetchPosts","fetchUserEvents","DatePicker","moment","Container","Grid","GigsContainer","props","closeEventFormModal","setState","isNewEventFormModalOpen","openEventFormModal","handleClick","e","preventDefault","state","startDate","isUpdateEventFormModalOpen","handleChange","bind","date","player","users","find","user","id","currentUser","events","map","event","datetime","Component","mapStateToProps","loading"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AAGA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,UAAlC,EAA8CC,eAA9C,QAAqE,wBAArE;AAGA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,4CAAP;AAEA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;;IAGMC,a;;;;;AACJ,yBAAaC,KAAb,EAAoB;AAAA;;AAAA;;AAClB,uFAAMA,KAAN;;AADkB,UA0BtBC,mBA1BsB,GA0BA,YAAM;AAC1B,YAAKC,QAAL,CAAc;AACZC,QAAAA,uBAAuB,EAAE;AADb,OAAd;AAGD,KA9BqB;;AAAA,UAgCtBC,kBAhCsB,GAgCD,YAAM;AACzB,YAAKF,QAAL,CAAc;AACZC,QAAAA,uBAAuB,EAAE;AADb,OAAd;AAGD,KApCqB;;AAAA,UAuCpBE,WAvCoB,GAuCP,UAACC,CAAD,EAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACD,KAzCkB;;AAElB,UAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAEb,MAAM,EADN;AAEXO,MAAAA,uBAAuB,EAAE,KAFd;AAGXO,MAAAA,0BAA0B,EAAE;AAHjB,KAAb;AAKA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAPkB;AAQnB;;;;wCAEmB;AAChB,WAAKZ,KAAL,CAAWT,WAAX;AACA,WAAKS,KAAL,CAAWR,UAAX;AACA,WAAKQ,KAAL,CAAWP,UAAX;AACA,WAAKO,KAAL,CAAWN,eAAX;AACD;;;iCAEUmB,I,EAAM;AACjB,WAAKX,QAAL,CAAc;AACZO,QAAAA,SAAS,EAAEI;AADC,OAAd;AAGD;;;6BAuBO;AAAA;;AAER,UAAIC,MAAM,GAAI,KAAKd,KAAL,CAAWe,KAAX,CAAiBC,IAAjB,CAAsB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAY,MAAI,CAAClB,KAAL,CAAWmB,WAAX,CAAuBD,EAAvC;AAAA,OAA1B,CAAd;AACG,aACC,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAkB,QAAA,OAAO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,SAAS,EAAC,QAAvB;AAAgC,QAAA,QAAQ,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKlB,KAAL,CAAWmB,WAAlC;AAA+C,QAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWT,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF,EAME,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,QAAQ,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGIuB,MAAM,GACN,oBAAC,UAAD;AACE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWC,SADvB;AAEE,QAAA,QAAQ,EAAE,KAAKE,YAFjB;AAGE,QAAA,cAAc,EAAGG,MAAM,CAACM,MAAP,CAAcC,GAAd,CAAkB,UAAAC,KAAK;AAAA,iBAAI1B,MAAM,CAAC0B,KAAK,CAACC,QAAP,CAAV;AAAA,SAAvB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,GAKD,IART,CADF,CANF,CADD;AAoBC;;;;EApEsBnC,KAAK,CAACoC,S;;AAqEjC,C,CAED;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAjB,KAAK,EAAI;AAC/B,SAAO;AACLkB,IAAAA,OAAO,EAAElB,KAAK,CAACkB,OADV;AAELN,IAAAA,MAAM,EAAEZ,KAAK,CAACY,MAFT;AAGLL,IAAAA,KAAK,EAAEP,KAAK,CAACO;AAHR,GAAP;AAKD,CAND;;AAQA,eAAezB,OAAO,CACpBmC,eADoB,EAEpB;AAAElC,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA,UAAf;AAA2BC,EAAAA,UAAU,EAAVA,UAA3B;AAAuCC,EAAAA,eAAe,EAAfA;AAAvC,CAFoB,CAAP,CAGbK,aAHa,CAAf","sourcesContent":["import React from \"react\";\n\nimport GigsList from '../components/GigsList'\n\n\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchPosts, fetchUserEvents } from \"../redux/actions/index\";\n\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { Container, Grid } from 'semantic-ui-react'\n\n\nclass GigsContainer extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      startDate: moment(),\n      isNewEventFormModalOpen: false,\n      isUpdateEventFormModalOpen: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchUsers();\n      this.props.fetchPosts();\n      this.props.fetchUserEvents();\n    }\n\n  handleChange(date) {\n    this.setState({\n      startDate: date\n    });\n  }\n\n\n\n\ncloseEventFormModal = () => {\n  this.setState({\n    isNewEventFormModalOpen: false\n  })\n}\n\nopenEventFormModal = () => {\n  this.setState({\n    isNewEventFormModalOpen: true\n  })\n}\n\n\n  handleClick= (e) => {\n     e.preventDefault();\n   }\n\n\n  render(){\n\n  let player =  this.props.users.find(user => user.id === this.props.currentUser.id);\n     return (\n      <Grid columns={2} divided >\n        <Grid.Column textAlign='center' computer={12}>\n          <br/>\n          <br/>\n          <GigsList currentUser={this.props.currentUser} fetchEvents={this.props.fetchEvents}  />\n        </Grid.Column>\n        <Grid.Column computer={4}>\n          <Container textAlign='left' >\n            <br/>\n            <br/>\n            { player ?\n              <DatePicker\n                selected={this.state.startDate}\n                onChange={this.handleChange}\n                highlightDates={ player.events.map(event => moment(event.datetime))}\n              /> : null }\n          </Container>\n        </Grid.Column>\n      </Grid>\n    )}\n};\n\n// player.events.map(event => moment(event.datetime))\n\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchEvents, fetchUsers, fetchPosts, fetchUserEvents  }\n)(GigsContainer);\n"]},"metadata":{},"sourceType":"module"}