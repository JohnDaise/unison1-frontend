{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigDetail.js\";\nimport React from \"react\";\nimport { Link, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\nimport { Grid, Image, Loader, Button } from 'semantic-ui-react';\nimport PlayersList from './PlayersList'; // import PostList from './PostList';\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nvar GigDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(GigDetail, _React$Component);\n\n  function GigDetail() {\n    _classCallCheck(this, GigDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(GigDetail).apply(this, arguments));\n  }\n\n  _createClass(GigDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchEvents();\n      this.props.fetchPosts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props.gig.event);\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(Loader, {\n        active: true,\n        inline: \"centered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }) : React.createElement(Grid, {\n        columns: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.props.gig.event.name), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.gig.event.date), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.gig.event.location), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, this.props.gig.event.time), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.gig.event.notes)), React.createElement(Grid.Column, {\n        className: \"post-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"make a different/parallel component here to PostList called GigPostList\"), React.createElement(Grid.Column, {\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"make a different/parallel component here to PlayerList called GigPlayerList\")));\n    }\n  }]);\n\n  return GigDetail;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  console.log(state.events);\n  var gig = state.userEvents.find(function (gig) {\n    return gig.id === parseInt(propsFromParent.gigId);\n  });\n  var event = state.events.find(function (event) {\n    return event.id === gig.id;\n  });\n  return {\n    loading: state.loading,\n    events: state.events,\n    posts: state.posts,\n    gig: gig,\n    event: event\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchPosts: fetchPosts\n})(GigDetail); ///need to make a different/parallel component to PostList called GigPostList so that gig details are rendered for players","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigDetail.js"],"names":["React","Link","Route","Switch","connect","fetchEvents","fetchPosts","loading","Grid","Image","Loader","Button","PlayersList","DatePicker","moment","GigDetail","props","console","log","gig","event","name","date","location","time","notes","Component","mapStateToProps","state","propsFromParent","events","userEvents","find","id","parseInt","gigId","posts"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Link, Route, Switch  } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchPosts, loading } from \"../redux/actions/index\";\n\nimport { Grid, Image, Loader, Button } from 'semantic-ui-react';\nimport PlayersList from './PlayersList';\n// import PostList from './PostList';\n\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\n\n\n\nclass GigDetail extends React.Component {\n\ncomponentDidMount(){\n  this.props.fetchEvents();\n  this.props.fetchPosts();\n}\n\n\n  render() {\n    console.log(this.props.gig.event)\n      return (\n        <React.Fragment>\n           {this.props.loading ?\n              <Loader active inline='centered' />\n             :\n        <Grid columns={3}>\n          <Grid.Column textAlign='center'>\n          <h1>{this.props.gig.event.name}</h1>\n          <h2>{this.props.gig.event.date}</h2>\n          <h2>{this.props.gig.event.location}</h2>\n          <h2>{this.props.gig.event.time}</h2>\n          <h2>{this.props.gig.event.notes}</h2>\n          </Grid.Column>\n          <Grid.Column className={\"post-col\"}>\n           make a different/parallel component here to PostList called GigPostList\n          </Grid.Column>\n          <Grid.Column textAlign='center'>\n          make a different/parallel component here to PlayerList called GigPlayerList\n          </Grid.Column>\n        </Grid>}\n        </React.Fragment>\n      )\n  }\n}\n\n\n  const mapStateToProps = (state, propsFromParent) => {\n    console.log(state.events)\n    let gig = state.userEvents.find(gig => gig.id === parseInt(propsFromParent.gigId))\n    let event =  state.events.find( event => event.id === gig.id)\n    return {\n      loading: state.loading,\n      events: state.events,\n      posts: state.posts,\n      gig: gig,\n      event: event\n    };\n   };\n\n   export default connect(\n     mapStateToProps,\n     { fetchEvents, fetchPosts }\n   )(GigDetail);\n\n\n   ///need to make a different/parallel component to PostList called GigPostList so that gig details are rendered for players\n"]},"metadata":{},"sourceType":"module"}