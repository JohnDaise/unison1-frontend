{"ast":null,"code":"var _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigsList.js\";\nimport React from \"react\";\nimport GigListItem from './GigListItem';\nimport { connect } from \"react-redux\";\nimport { Grid, Loader, List, Button } from 'semantic-ui-react'; //map thru all userEvents that include currentUser id. those userEvents will have event ids\n\nvar GigsList = function GigsList(props) {\n  return console.log(props.userEvents.filter(function (gig) {\n    return gig.user_id === props.currentUser.id;\n  })), // console.log(props.events.filter(event => event.users.filter( user => user === props.currentUser))),\n  React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.loading ? React.createElement(Loader, {\n    active: true,\n    inline: \"centered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }) : React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, props.currentUser ? props.userEvents.filter(function (gig) {\n    return gig.user_id === props.currentUser.id;\n  }).map(function (gig) {\n    return React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(GigListItem, {\n      gig: gig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }));\n  }) : null));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    userEvents: state.userEvents\n  };\n};\n\nexport default connect(mapStateToProps)(GigsList);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigsList.js"],"names":["React","GigListItem","connect","Grid","Loader","List","Button","GigsList","props","console","log","userEvents","filter","gig","user_id","currentUser","id","loading","map","mapStateToProps","state","events","users"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAyB,eAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,MAA7B,QAA2C,mBAA3C,C,CAEA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SACfC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAN,CAAiBC,MAAjB,CAAwB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,OAAJ,KAAgBN,KAAK,CAACO,WAAN,CAAkBC,EAAtC;AAAA,GAA3B,CAAZ,GACE;AACE,sBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,KAAK,CAACS,OAAN,GACD,oBAAC,MAAD;AAAQ,IAAA,MAAM,MAAd;AAAe,IAAA,MAAM,EAAC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC,GAGD,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACO,WAAN,GACDP,KAAK,CAACG,UAAN,CAAiBC,MAAjB,CAAwB,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,OAAJ,KAAgBN,KAAK,CAACO,WAAN,CAAkBC,EAAtC;AAAA,GAA3B,EAAqEE,GAArE,CAAyE,UAAAL,GAAG;AAAA,WAC3E,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAW,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAX,CAD2E;AAAA,GAA5E,CADC,GAGE,IAJL,CAJF,CAHW;AAAA,CAAjB;;AAgBA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLH,IAAAA,OAAO,EAAEG,KAAK,CAACH,OADV;AAELI,IAAAA,MAAM,EAAED,KAAK,CAACC,MAFT;AAGLC,IAAAA,KAAK,EAAEF,KAAK,CAACE,KAHR;AAILX,IAAAA,UAAU,EAAES,KAAK,CAACT;AAJb,GAAP;AAMD,CAPD;;AAUA,eAAeT,OAAO,CAACiB,eAAD,CAAP,CAAyBZ,QAAzB,CAAf","sourcesContent":["import React from \"react\";\n\nimport GigListItem  from './GigListItem'\nimport { connect } from \"react-redux\";\n\nimport { Grid, Loader, List, Button } from 'semantic-ui-react'\n\n//map thru all userEvents that include currentUser id. those userEvents will have event ids\nconst GigsList = (props) => (\n  console.log(props.userEvents.filter(gig => gig.user_id === props.currentUser.id)),\n    // console.log(props.events.filter(event => event.users.filter( user => user === props.currentUser))),\n      <React.Fragment>\n        {props.loading ?\n        <Loader active inline='centered' />\n      :\n        <List>\n          {props.currentUser ?\n          props.userEvents.filter(gig => gig.user_id === props.currentUser.id).map(gig =>\n           <List.Item><GigListItem gig={gig} /></List.Item>\n         ) : null }\n       </List>}\n      </React.Fragment>\n);\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    userEvents: state.userEvents\n  };\n};\n\n\nexport default connect(mapStateToProps)(GigsList);\n"]},"metadata":{},"sourceType":"module"}