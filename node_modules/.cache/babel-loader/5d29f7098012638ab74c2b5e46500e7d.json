{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js\";\n\nimport React from \"react\";\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport Iframe from 'react-iframe';\n\nvar Post = function Post(props) {\n  renderIframe = function renderIframe(params) {\n    switch (props.post.url.includes(x)) {\n      case props.post.url.includes('pdf'):\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, \"Notes: \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, props.post.content), React.createElement(\"iframe\", {\n          style: \"border:1px solid #666CCC\",\n          title: \"PDF in an i-Frame\",\n          src: props.post.url,\n          frameborder: \"1\",\n          scrolling: \"auto\",\n          height: \"1100\",\n          width: \"850\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }));\n        break;\n\n      case props.post.url.includes('youtube'):\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"Notes: \", React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, props.post.content), React.createElement(\"iframe\", {\n          width: \"380\",\n          height: \"157\",\n          src: \"https://www.youtube.com/embed/\" + props.post.url.split(\"/\")[3],\n          frameborder: \"0\",\n          allow: \"autoplay; encrypted-media\",\n          allowfullscreen: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n        break;\n\n      default:\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, props.post.content));\n    }\n  };\n\n  return console.log(props.post), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, _this.renderIframe(props.post.url));\n}; // const mapStateToProps = (state, propsFromParent) => {\n//   // let post = state.posts.find(post => post.id === props.singleEvent.id)\n//   return {\n//     loading: state.loading,\n//     events: state.events,\n//     posts: state.posts,\n//   };\n//  };\n//\n//  export default connect(mapStateToProps)(Post);\n\n\nexport default Post; // let event = state.events.find(event => event.id === parseInt(propsFromParent.eventId))\n// <iframe width=\"380\"\n// height=\"200\"\n// src={props.post.url}\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n//\n//\n// {props.post.url !== \"\" ?\n//   <div>\n//   Notes: <p>{props.post.content}</p>\n//   <iframe width=\"380\"\n//   height=\"200\"\n//   src={props.post.url}\n//   frameborder=\"0\"\n//   allow=\"autoplay; encrypted-media\"\n//   allowfullscreen></iframe>\n//   </div> :\n//\n//   <div>\n//     <p>{props.post.content}</p>\n//   </div>\n// }\n//\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js"],"names":["React","Grid","connect","Iframe","Post","props","renderIframe","params","post","url","includes","x","content","split","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAGxBC,EAAAA,YAAY,GAAG,sBAACC,MAAD,EAAY;AACvB,YAAQF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,QAAf,CAAwBC,CAAxB,CAAR;AACG,WAAKN,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,QAAf,CAAwB,KAAxB,CAAL;AACA,eACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIL,KAAK,CAACG,IAAN,CAAWI,OAAf,CADP,EAEE;AACE,UAAA,KAAK,EAAC,0BADR;AAEE,UAAA,KAAK,EAAC,mBAFR;AAGE,UAAA,GAAG,EAAEP,KAAK,CAACG,IAAN,CAAWC,GAHlB;AAIE,UAAA,WAAW,EAAC,GAJd;AAKE,UAAA,SAAS,EAAC,MALZ;AAME,UAAA,MAAM,EAAC,MANT;AAOE,UAAA,KAAK,EAAC,KAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADH;AAaK;;AACN,WAAKJ,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,QAAf,CAAwB,SAAxB,CAAL;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIL,KAAK,CAACG,IAAN,CAAWI,OAAf,CADP,EAEA;AAAQ,UAAA,KAAK,EAAC,KAAd;AACE,UAAA,MAAM,EAAC,KADT;AAEE,UAAA,GAAG,EAAE,mCAAkCP,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeI,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAFzC;AAGE,UAAA,WAAW,EAAC,GAHd;AAIE,UAAA,KAAK,EAAC,2BAJR;AAKE,UAAA,eAAe,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA,CADJ;AAWM;;AACN;AACA,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIR,KAAK,CAACG,IAAN,CAAWI,OAAf,CADF,CADJ;AA9BF;AAoCG,GArCP;;AAwCE,SACEE,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACG,IAAlB,GACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,KAAI,CAACF,YAAL,CAAkBD,KAAK,CAACG,IAAN,CAAWC,GAA7B,CADL,CAFF;AAQD,CAnDD,C,CAqDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,eAAeL,IAAf,C,CAGD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAWF;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\n\nimport Iframe from 'react-iframe';\n\n\n\nconst Post = (props) => {\n\n\nrenderIframe = (params) => {\n    switch (props.post.url.includes(x)){\n       case props.post.url.includes('pdf'):\n       return (\n          <div>\n          Notes: <p>{props.post.content}</p>\n            <iframe\n              style=\"border:1px solid #666CCC\"\n              title=\"PDF in an i-Frame\"\n              src={props.post.url}\n              frameborder=\"1\"\n              scrolling=\"auto\"\n              height=\"1100\"\n              width=\"850\" ></iframe>\n            </div>\n          )\n            break;\n      case props.post.url.includes('youtube'):\n      return (\n          <div>\n          Notes: <p>{props.post.content}</p>\n          <iframe width=\"380\"\n            height=\"157\"\n            src={\"https://www.youtube.com/embed/\"+ props.post.url.split(\"/\")[3]}\n            frameborder=\"0\"\n            allow=\"autoplay; encrypted-media\"\n            allowfullscreen></iframe>\n            </div>\n          )\n            break;\n      default:\n      return (\n          <div>\n            <p>{props.post.content}</p>\n          </div>\n        )\n        }\n      }\n\n\n  return(\n    console.log(props.post),\n    <React.Fragment>\n        {this.renderIframe(props.post.url)}\n     </React.Fragment>\n  )\n\n\n}\n\n// const mapStateToProps = (state, propsFromParent) => {\n//   // let post = state.posts.find(post => post.id === props.singleEvent.id)\n//   return {\n//     loading: state.loading,\n//     events: state.events,\n//     posts: state.posts,\n//   };\n//  };\n//\n//  export default connect(mapStateToProps)(Post);\n export default Post;\n\n\n// let event = state.events.find(event => event.id === parseInt(propsFromParent.eventId))\n\n\n\n// <iframe width=\"380\"\n// height=\"200\"\n// src={props.post.url}\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n//\n//\n\n\n\n\n\n\n    // {props.post.url !== \"\" ?\n    //   <div>\n    //   Notes: <p>{props.post.content}</p>\n    //   <iframe width=\"380\"\n    //   height=\"200\"\n    //   src={props.post.url}\n    //   frameborder=\"0\"\n    //   allow=\"autoplay; encrypted-media\"\n    //   allowfullscreen></iframe>\n    //   </div> :\n    //\n    //   <div>\n    //     <p>{props.post.content}</p>\n    //   </div>\n  // }\n\n\n\n\n\n\n\n\n\n\n//\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>\n"]},"metadata":{},"sourceType":"module"}