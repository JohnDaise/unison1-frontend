{"ast":null,"code":"var _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigPlayerList.js\";\nimport React from \"react\";\nimport { Grid, List, Image, Icon } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchedEvents, loading } from \"../redux/actions/index\";\n\nvar GigPlayerList = function GigPlayerList(props) {\n  //each list item should be a link that renders a simple user details modal\n  return console.log(props), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Users\")), React.createElement(List.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Image, {\n    avatar: true,\n    src: props.gig.user.pic_url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(List.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(List.Header, {\n    as: \"a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.gig.user.name), React.createElement(List.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"'Organizer'\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state, propsFromParent) {\n  var organizer = state.users.find(function (user) {\n    return user.id === parseInt(propsFromParent.currentUser.id);\n  });\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    organizer: organizer\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchEvents: fetchEvents,\n  fetchUsers: fetchUsers\n})(GigPlayerList); // <List.Item>\n//       <Image avatar src={props.organizer.pic_url} />\n//       <List.Content>\n//      <List.Header as='a'>{props.organizer.name}</List.Header>\n//      <List.Description>\n//        'Organizer'\n//      </List.Description>\n//    </List.Content>\n//    <br/>\n//    <br/>\n// </List.Item>\n// {props.players.map( p=>\n//   <List.Item>\n//         <Image avatar src={p.pic_url} />\n//         <List.Content>\n//        <List.Header as='a'>{p.name}</List.Header>\n//        <List.Description>\n//          'Player'\n//        </List.Description>\n//      </List.Content>\n//   </List.Item>\n// )}","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/GigPlayerList.js"],"names":["React","Grid","List","Image","Icon","connect","fetchEvents","fetchUsers","fetchedEvents","loading","GigPlayerList","props","console","log","gig","user","pic_url","name","mapStateToProps","state","propsFromParent","organizer","users","find","id","parseInt","currentUser","events"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,EAA4BC,IAA5B,QAAwC,mBAAxC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,aAAlC,EAAiDC,OAAjD,QAAgE,wBAAhE;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAIjC;AACE,SACEC,OAAO,CAACC,GAAR,CAAYF,KAAZ,GACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAR,CADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,oBAAC,KAAD;AAAO,IAAA,MAAM,MAAb;AAAc,IAAA,GAAG,EAAEA,KAAK,CAACG,GAAN,CAAUC,IAAV,CAAeC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADN,EAEM,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBL,KAAK,CAACG,GAAN,CAAUC,IAAV,CAAeE,IAApC,CADC,EAED,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFC,CAFN,EAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARH,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATH,CAFF,CAFF;AAuBD,CA5BD;;AA+BA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,eAAR,EAA4B;AAClD,MAAIC,SAAS,GAAGF,KAAK,CAACG,KAAN,CAAYC,IAAZ,CAAiB,UAAAR,IAAI;AAAA,WAAIA,IAAI,CAACS,EAAL,KAAYC,QAAQ,CAACL,eAAe,CAACM,WAAhB,CAA4BF,EAA7B,CAAxB;AAAA,GAArB,CAAhB;AACA,SAAO;AACLf,IAAAA,OAAO,EAAEU,KAAK,CAACV,OADV;AAELkB,IAAAA,MAAM,EAAER,KAAK,CAACQ,MAFT;AAGLL,IAAAA,KAAK,EAAEH,KAAK,CAACG,KAHR;AAILD,IAAAA,SAAS,EAAEA;AAJN,GAAP;AAMD,CARD;;AAUA,eAAehB,OAAO,CACpBa,eADoB,EAEpB;AAAEZ,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,UAAU,EAAVA;AAAf,CAFoB,CAAP,CAGbG,aAHa,CAAf,C,CAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Grid, List, Image, Icon } from 'semantic-ui-react'\n\nimport { connect } from \"react-redux\";\nimport { fetchEvents, fetchUsers, fetchedEvents, loading } from \"../redux/actions/index\";\n\nconst GigPlayerList = (props) => {\n\n\n\n//each list item should be a link that renders a simple user details modal\n  return(\n    console.log(props),\n    <List>\n      <strong><h1>Users</h1></strong>\n      <List.Item>\n            <Image avatar src={props.gig.user.pic_url} />\n            <List.Content>\n           <List.Header as='a'>{props.gig.user.name}</List.Header>\n           <List.Description>\n             'Organizer'\n           </List.Description>\n         </List.Content>\n         <br/>\n         <br/>\n      </List.Item>\n\n    </List>\n  )\n\n\n\n\n\n}\n\n\nconst mapStateToProps = (state, propsFromParent )=> {\n  let organizer = state.users.find(user => user.id === parseInt(propsFromParent.currentUser.id))\n  return {\n    loading: state.loading,\n    events: state.events,\n    users: state.users,\n    organizer: organizer\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchEvents, fetchUsers }\n)(GigPlayerList);\n\n\n\n\n\n\n\n\n\n\n// <List.Item>\n//       <Image avatar src={props.organizer.pic_url} />\n//       <List.Content>\n//      <List.Header as='a'>{props.organizer.name}</List.Header>\n//      <List.Description>\n//        'Organizer'\n//      </List.Description>\n//    </List.Content>\n//    <br/>\n//    <br/>\n// </List.Item>\n// {props.players.map( p=>\n//   <List.Item>\n//         <Image avatar src={p.pic_url} />\n//         <List.Content>\n//        <List.Header as='a'>{p.name}</List.Header>\n//        <List.Description>\n//          'Player'\n//        </List.Description>\n//      </List.Content>\n//   </List.Item>\n// )}\n"]},"metadata":{},"sourceType":"module"}