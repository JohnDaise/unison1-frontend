{"ast":null,"code":"import _toConsumableArray from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\"; // import userData from \"../users.json\";\n\nvar initialState = {\n  users: [],\n  events: [],\n  posts: [],\n  searchTerm: \"\",\n  dropValue: null\n};\n\nvar searchTextReducer = function searchTextReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n\n    default:\n      return state;\n  }\n};\n\nvar dropDownReducer = function dropDownReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_DROP_VALUE\":\n      return action.value;\n\n    default:\n      return state;\n  }\n};\n\nvar usersReducer = function usersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHED_USERS\":\n      return action.users;\n\n    default:\n      return state;\n  }\n};\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHING_USERS\":\n      return true;\n\n    case \"FETCHING_EVENTS\":\n      return true;\n\n    case \"FETCHED_USERS\":\n      return false;\n\n    case \"FETCHED_EVENTS\":\n      return false;\n\n    default:\n      return state;\n  }\n}; //to create  add dispatch in action mapDispatchToProps\n\n\nvar eventsReducer = function eventsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newEvents = [];\n\n  switch (action.type) {\n    case \"ADD_EVENT\":\n      return newEvents = _toConsumableArray(state).concat([action.event]);\n\n    case \"FETCHED_EVENTS\":\n      return action.events;\n\n    default:\n      return state;\n  }\n};\n\nvar postsReducer = function postsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var newPosts = [];\n\n  switch (action.type) {\n    case \"ADD_POST\":\n      return newPosts = _toConsumableArray(state).concat([action.post]);\n\n    case \"FETCHED_POSTS\":\n      return action.events;\n\n    default:\n      return state;\n  }\n}; ///do this reducer\n//to login a user dispatch here mapDispatchToProps\n// hold current user info  mapStateToProps\n//boolean if user is logged in mapStateToProps\n\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_USER:\":\n      return action.currentUser;\n\n    case \"FORGET_USER\":\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  searchTerm: searchTextReducer,\n  dropValue: dropDownReducer,\n  users: usersReducer,\n  currentUser: loginReducer,\n  events: eventsReducer,\n  loading: loadingReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/redux/reducer.js"],"names":["combineReducers","initialState","users","events","posts","searchTerm","dropValue","searchTextReducer","state","action","type","value","dropDownReducer","usersReducer","loadingReducer","eventsReducer","newEvents","event","postsReducer","newPosts","post","loginReducer","currentUser","rootReducer","loading"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\n// import userData from \"../users.json\";\n\nconst initialState = {\n  users: [],\n  events: [],\n  posts: [],\n  searchTerm: \"\",\n  dropValue: null\n};\n\n\nconst searchTextReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst dropDownReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"CHANGE_DROP_VALUE\":\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst usersReducer = (state = [], action) => {\n  switch(action.type){\n    case \"FETCHED_USERS\":\n        return action.users;\n    default:\n      return state;\n  }\n}\n\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCHING_USERS\":\n      return true;\n    case \"FETCHING_EVENTS\":\n      return true;\n      case \"FETCHED_USERS\":\n      return false;\n    case \"FETCHED_EVENTS\":\n      return false;\n    default:\n      return state;\n  }\n};\n\n//to create  add dispatch in action mapDispatchToProps\nconst eventsReducer = (state = [], action) => {\n  let newEvents = []\n  switch(action.type){\n    case \"ADD_EVENT\":\n      return newEvents = [...state, action.event]\n    case \"FETCHED_EVENTS\":\n        return action.events;\n    default:\n      return state;\n  }\n}\n\n\nconst postsReducer = (state = [], action) => {\n  let newPosts = []\n  switch(action.type){\n    case \"ADD_POST\":\n      return newPosts = [...state, action.post]\n    case \"FETCHED_POSTS\":\n        return action.events;\n    default:\n      return state;\n  }\n}\n\n\n\n///do this reducer\n//to login a user dispatch here mapDispatchToProps\n// hold current user info  mapStateToProps\n//boolean if user is logged in mapStateToProps\nconst loginReducer = (state = null, action) => {\n  switch(action.type){\n    case \"SET_USER:\":\n      return action.currentUser\n    case \"FORGET_USER\":\n        return null;\n    default:\n      return state;\n    }\n}\n\n\n\n\nconst rootReducer = combineReducers({\n  searchTerm: searchTextReducer,\n  dropValue: dropDownReducer,\n  users: usersReducer,\n  currentUser: loginReducer,\n  events: eventsReducer,\n  loading: loadingReducer\n});\n\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}