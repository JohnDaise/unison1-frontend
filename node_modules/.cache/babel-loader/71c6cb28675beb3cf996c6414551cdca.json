{"ast":null,"code":"import _toConsumableArray from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { combineReducers } from \"redux\";\nimport ActionTypes from './actions/ActionTypes'; // import userData from \"../users.json\";\n\nvar initialState = {\n  users: [],\n  events: [],\n  userEvents: [],\n  posts: [],\n  searchTerm: \"\",\n  dropValue: null,\n  modalType: null,\n  modalProps: {}\n};\n\nvar searchTextReducer = function searchTextReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n\n    default:\n      return state;\n  }\n};\n\nvar dropDownReducer = function dropDownReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"CHANGE_DROP_VALUE\":\n      return action.value;\n\n    case \"ROUTER_CHANGE\":\n      return {};\n\n    default:\n      return state;\n  }\n};\n\nvar usersReducer = function usersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHED_USERS\":\n      return action.users;\n\n    default:\n      return state;\n  }\n};\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"FETCHING_USERS\":\n      return true;\n\n    case \"FETCHING_EVENTS\":\n      return true;\n\n    case \"FETCHED_USERS\":\n      return false;\n\n    case \"FETCHED_EVENTS\":\n      return false;\n\n    default:\n      return state;\n  }\n}; //to create  add dispatch in action mapDispatchToProps\n\n\nvar eventsReducer = function eventsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"EVENT_DELETED\":\n      return state.filter(function (event) {\n        return event.id !== action.event.id;\n      });\n\n    case \"EVENT_UPDATED\":\n      return state.map(function (event) {\n        if (event.id === action.event.id) {\n          return action.event;\n        } else {\n          return event;\n        }\n      });\n\n    case \"ADD_EVENT\":\n      return _toConsumableArray(state).concat([action.event]);\n\n    case \"FETCHED_EVENTS\":\n      return action.events;\n\n    default:\n      return state;\n  }\n};\n\nvar userEventsReducer = function userEventsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_USER_EVENT\":\n      return _toConsumableArray(state).concat([action.ue]);\n\n    case \"USER_EVENT_CREATED\":\n      return _toConsumableArray(state).concat([action.ue]);\n\n    case \"USER_EVENT_DELETED\":\n      return state.filter(function (ue) {\n        return ue.id !== action.ue.id;\n      });\n\n    case \"FETCHED_USER_EVENTS\":\n      return action.ues;\n\n    default:\n      return state;\n  }\n};\n\nvar postsReducer = function postsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"POST_DELETED\":\n      return state.filter(function (post) {\n        return post.id !== action.post.id;\n      });\n\n    case \"ADD_POST\":\n      return _toConsumableArray(state).concat([action.post]);\n\n    case \"FETCHED_POSTS\":\n      return action.posts;\n\n    default:\n      return state;\n  }\n};\n\nvar modalReducer = function modalReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ActionTypes.SHOW_MODAL:\n      return {\n        modalProps: action.modalProps,\n        modalType: action.modalType,\n        type: action.type\n      };\n\n    case ActionTypes.HIDE_MODAL:\n      return initialState;\n\n    default:\n      return state;\n  }\n}; ///do this reducer\n//to login a user dispatch here mapDispatchToProps\n// hold current user info  mapStateToProps\n//boolean if user is logged in mapStateToProps\n\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SET_USER:\":\n      return action.currentUser;\n\n    case \"FORGET_USER\":\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nvar rootReducer = combineReducers({\n  searchTerm: searchTextReducer,\n  dropValue: dropDownReducer,\n  users: usersReducer,\n  currentUser: loginReducer,\n  events: eventsReducer,\n  userEvents: userEventsReducer,\n  loading: loadingReducer,\n  modal: modalReducer,\n  posts: postsReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/redux/reducer.js"],"names":["combineReducers","ActionTypes","initialState","users","events","userEvents","posts","searchTerm","dropValue","modalType","modalProps","searchTextReducer","state","action","type","value","dropDownReducer","usersReducer","loadingReducer","eventsReducer","filter","event","id","map","userEventsReducer","ue","ues","postsReducer","post","modalReducer","SHOW_MODAL","HIDE_MODAL","loginReducer","currentUser","rootReducer","loading","modal"],"mappings":"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","sourcesContent":["import { combineReducers } from \"redux\";\nimport ActionTypes from './actions/ActionTypes';\n// import userData from \"../users.json\";\n\nconst initialState = {\n  users: [],\n  events: [],\n  userEvents: [],\n  posts: [],\n  searchTerm: \"\",\n  dropValue: null,\n  modalType: null,\n  modalProps: {}\n};\n\n\nconst searchTextReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case \"CHANGE_SEARCH_TEXT\":\n      return action.value;\n    default:\n      return state;\n  }\n};\n\nconst dropDownReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"CHANGE_DROP_VALUE\":\n      return action.value;\n    case \"ROUTER_CHANGE\":\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst usersReducer = (state = [], action) => {\n  switch(action.type){\n    case \"FETCHED_USERS\":\n        return action.users;\n    default:\n      return state;\n  }\n}\n\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case \"FETCHING_USERS\":\n      return true;\n    case \"FETCHING_EVENTS\":\n      return true;\n      case \"FETCHED_USERS\":\n      return false;\n    case \"FETCHED_EVENTS\":\n      return false;\n    default:\n      return state;\n  }\n};\n\n//to create  add dispatch in action mapDispatchToProps\nconst eventsReducer = (state = [], action) => {\n  switch(action.type){\n    case \"EVENT_DELETED\":\n      return state.filter( event => event.id !== action.event.id)\n    case \"EVENT_UPDATED\":\n      return state.map(event => {\n        if (event.id === action.event.id) {\n          return action.event;\n        } else {\n          return event;\n        }\n      });\n    case \"ADD_EVENT\":\n      return [...state, action.event]\n    case \"FETCHED_EVENTS\":\n        return action.events;\n    default:\n      return state;\n  }\n}\n\n\nconst userEventsReducer = (state = [], action) => {\n  switch(action.type){\n    case \"ADD_USER_EVENT\":\n      return [...state, action.ue]\n    case \"USER_EVENT_CREATED\":\n      return [...state, action.ue]\n    case \"USER_EVENT_DELETED\":\n      return state.filter( ue => ue.id !== action.ue.id)\n    case \"FETCHED_USER_EVENTS\":\n        return action.ues;\n    default:\n      return state;\n  }\n}\n\n\nconst postsReducer = (state = [], action) => {\n\n  switch(action.type){\n    case \"POST_DELETED\":\n      return state.filter( post => post.id !== action.post.id)\n    case \"ADD_POST\":\n      return [...state, action.post];\n    case \"FETCHED_POSTS\":\n        return action.posts;\n    default:\n      return state;\n  }\n}\n\n\nconst modalReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionTypes.SHOW_MODAL:\n      return {\n        modalProps: action.modalProps,\n        modalType: action.modalType,\n        type: action.type\n      }\n    case ActionTypes.HIDE_MODAL:\n      return initialState\n    default:\n      return state\n  }\n}\n\n\n\n///do this reducer\n//to login a user dispatch here mapDispatchToProps\n// hold current user info  mapStateToProps\n//boolean if user is logged in mapStateToProps\nconst loginReducer = (state = null, action) => {\n  switch(action.type){\n    case \"SET_USER:\":\n      return action.currentUser\n    case \"FORGET_USER\":\n        return null;\n    default:\n      return state;\n    }\n}\n\n\n\n\nconst rootReducer = combineReducers({\n  searchTerm: searchTextReducer,\n  dropValue: dropDownReducer,\n  users: usersReducer,\n  currentUser: loginReducer,\n  events: eventsReducer,\n  userEvents: userEventsReducer,\n  loading: loadingReducer,\n  modal: modalReducer,\n  posts: postsReducer\n});\n\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}