{"ast":null,"code":"import _classCallCheck from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/UserCard.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { Grid, Card, Button, Image, Icon } from 'semantic-ui-react'; // import { fetchEvents } from \"../redux/actions/index\";\n\nvar UserCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserCard, _React$Component);\n\n  function UserCard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserCard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.addPlayer = function (e) {\n      e.preventDefault();\n      var eventId = _this.props.event.id;\n      var playerId = _this.props.user.id;\n      var dropValue = _this.props.dropValue;\n      var payload = {\n        eventId: eventId,\n        playerId: playerId,\n        dropValue: dropValue\n      };\n\n      _this.props.addPlayerToEvent({\n        payload: payload\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserCard, [{\n    key: \"render\",\n    // addPlayerToEvent = () => {\n    // //adjust logic and find a way to empty dropValue componentDidMount\n    //   if (this.props.dropValue.value && this.props.event){\n    //     let eventId = this.props.event.id\n    //     let playerId = this.props.user.id\n    //   if (this.props.event.users.map(user => user.id).includes(playerId)){\n    //     window.alert(\"Player already added\")\n    //   } else {\n    //   fetch(`http://localhost:3001/user_events/`, {\n    //   method: \"POST\",\n    //   headers: {\n    //     Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    //     'Content-Type': 'application/json',\n    //     Accept: \"application/json\"\n    //   },\n    //   body: JSON.stringify({\n    //         user_id: playerId,\n    //         event_id: eventId\n    //       })\n    //   })\n    //     .then(r => r.json())\n    //       .then(json => console.log(json))\n    //   // this.props.fetchEvents();\n    //   this.props.openPlayerAddedModal()\n    //   }\n    // } else {\n    //  this.props.openWarningModal()\n    // }}\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props);\n      var eventId = event.id;\n      var playerId = this.props.user.id;\n      var payload = {\n        eventId: eventId,\n        playerId: playerId // console.log(event === undefined)\n\n      };\n      return React.createElement(Grid.Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Image, {\n        src: this.props.user.pic_url,\n        circular: true,\n        size: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Card.Header, {\n        as: \"h3\",\n        id: this.props.user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.props.user.name), React.createElement(Icon, {\n        name: \"envelope\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), \" \", this.props.user.email, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        name: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \" \", this.props.user.phone_number, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        name: \"file alternate\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), \" \", this.props.user.bio), this.props.event === undefined ? null : // this.props.event.users.map( player => player.id).includes(this.props.user.id)\n      this.props.user.events.map(function (event) {\n        return event.id;\n      }).includes(this.props.event.id) ? null : React.createElement(Button, {\n        onClick: function onClick() {\n          // this.props.addPlayerToEvent()\n          _this2.addPlayer();\n        } //add a function here that will listen for change in the event and re render\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Add Player\")));\n    }\n  }]);\n\n  return UserCard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var event = state.events.find(function (event) {\n    return event.name === state.dropValue.value;\n  });\n  return {\n    loading: state.loading,\n    events: state.events,\n    event: event,\n    users: state.users,\n    userEvents: state.userEvents,\n    dropValue: state.dropValue.value\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addPlayerToEvent: function (_addPlayerToEvent) {\n      function addPlayerToEvent(_x) {\n        return _addPlayerToEvent.apply(this, arguments);\n      }\n\n      addPlayerToEvent.toString = function () {\n        return _addPlayerToEvent.toString();\n      };\n\n      return addPlayerToEvent;\n    }(function (value) {\n      return dispatch(addPlayerToEvent(value));\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserCard);","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/UserCard.js"],"names":["React","connect","Grid","Card","Button","Image","Icon","UserCard","addPlayer","e","preventDefault","eventId","props","event","id","playerId","user","dropValue","payload","addPlayerToEvent","console","log","pic_url","name","email","phone_number","bio","undefined","events","map","includes","Component","mapStateToProps","state","find","value","loading","users","userEvents","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from \"react-redux\";\nimport { Grid, Card, Button, Image, Icon } from 'semantic-ui-react';\n// import { fetchEvents } from \"../redux/actions/index\";\n\n\n\n\n\nclass UserCard extends React.Component {\n\naddPlayer = (e) => {\n  e.preventDefault();\n  let eventId = this.props.event.id\n  let playerId = this.props.user.id\n  let dropValue = this.props.dropValue\n  let payload = {\n    eventId: eventId,\n    playerId: playerId,\n    dropValue: dropValue\n  }\n  this.props.addPlayerToEvent({payload})\n\n}\n\n// addPlayerToEvent = () => {\n// //adjust logic and find a way to empty dropValue componentDidMount\n//   if (this.props.dropValue.value && this.props.event){\n//     let eventId = this.props.event.id\n//     let playerId = this.props.user.id\n//   if (this.props.event.users.map(user => user.id).includes(playerId)){\n//     window.alert(\"Player already added\")\n//   } else {\n//   fetch(`http://localhost:3001/user_events/`, {\n//   method: \"POST\",\n//   headers: {\n//     Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n//     'Content-Type': 'application/json',\n//     Accept: \"application/json\"\n//   },\n//   body: JSON.stringify({\n//         user_id: playerId,\n//         event_id: eventId\n//       })\n//   })\n//     .then(r => r.json())\n//       .then(json => console.log(json))\n//   // this.props.fetchEvents();\n//   this.props.openPlayerAddedModal()\n//   }\n// } else {\n//  this.props.openWarningModal()\n// }}\n\n\nrender(){\n  console.log(this.props)\n  let eventId = event.id\n  let playerId = this.props.user.id\n\n  let payload = {\n    eventId: eventId,\n    playerId: playerId\n  }\n  // console.log(event === undefined)\n  return(\n    <Grid.Column>\n    <Card>\n      <Card.Content>\n        <Image src={this.props.user.pic_url} circular size=\"small\"/>\n          <br/>\n          <br/>\n        <Card.Header as='h3' id={this.props.user.id}  >{this.props.user.name}</Card.Header>\n        <Icon name=\"envelope\"/> {this.props.user.email}<br/>\n        <Icon name=\"phone\"/> {this.props.user.phone_number}<br/>\n        <Icon name=\"file alternate\"/> {this.props.user.bio}\n      </Card.Content>\n      {this.props.event === undefined ? null :\n        // this.props.event.users.map( player => player.id).includes(this.props.user.id)\n            this.props.user.events.map( event => event.id ).includes(this.props.event.id) ? null :\n          <Button\n            onClick={()=> {\n              // this.props.addPlayerToEvent()\n              this.addPlayer()\n            }//add a function here that will listen for change in the event and re render\n            }>Add Player</Button>\n          }\n    </Card>\n    </Grid.Column>\n  )\n  }\n}\n\nconst mapStateToProps = state => {\n  let event = state.events.find( event => event.name === state.dropValue.value)\n  return {\n    loading: state.loading,\n    events: state.events,\n    event: event,\n    users: state.users,\n    userEvents: state.userEvents,\n    dropValue: state.dropValue.value\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPlayerToEvent: value => dispatch(addPlayerToEvent(value)),\n  };\n};\n\n\n\n\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(UserCard);\n"]},"metadata":{},"sourceType":"module"}