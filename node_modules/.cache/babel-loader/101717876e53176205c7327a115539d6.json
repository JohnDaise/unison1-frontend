{"ast":null,"code":"var _jsxFileName = \"/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js\";\nimport React from \"react\";\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport Iframe from 'react-iframe';\n\nvar Post = function Post(props) {\n  //new post form creates an iframe element if it includes a url otherwise would just show post content\n  //-sets the src string and would need an id\n  //find simple way to check if there is a valid url (maybe npm package) before rendering\n  return console.log(props.post), console.log(\"https://www.youtube.com/embed/\" + props.post.url.split(\"/\")[3]), React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.post.url !== \"\" ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Notes: \", React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, props.post.content), React.createElement(\"iframe\", {\n    width: \"380\",\n    height: \"157\",\n    src: \"https://www.youtube.com/embed/\" + props.post.url.split(\"/\")[3],\n    frameborder: \"0\",\n    allow: \"autoplay; encrypted-media\",\n    allowfullscreen: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.post.content)));\n}; // const mapStateToProps = (state, propsFromParent) => {\n//   // let post = state.posts.find(post => post.id === props.singleEvent.id)\n//   return {\n//     loading: state.loading,\n//     events: state.events,\n//     posts: state.posts,\n//   };\n//  };\n//\n//  export default connect(mapStateToProps)(Post);\n\n\nexport default Post; // let event = state.events.find(event => event.id === parseInt(propsFromParent.eventId))\n// <iframe width=\"380\"\n// height=\"200\"\n// src={props.post.url}\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n//\n//\n// {props.post.url !== \"\" ?\n//   <div>\n//   Notes: <p>{props.post.content}</p>\n//   <iframe width=\"380\"\n//   height=\"200\"\n//   src={props.post.url}\n//   frameborder=\"0\"\n//   allow=\"autoplay; encrypted-media\"\n//   allowfullscreen></iframe>\n//   </div> :\n//\n//   <div>\n//     <p>{props.post.content}</p>\n//   </div>\n// }\n//\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>","map":{"version":3,"sources":["/Users/JohnDaise/Desktop/Flatiron/mod4/unison1-frontend/src/components/Post.js"],"names":["React","Grid","connect","Iframe","Post","props","console","log","post","url","split","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AAGxB;AACA;AACA;AAEE,SACEC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB,GACAF,OAAO,CAACC,GAAR,CAAY,mCAAkCF,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAA9C,CADA,EAEA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKL,KAAK,CAACG,IAAN,CAAWC,GAAX,KAAmB,EAAnB,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACG,IAAN,CAAWG,OAAf,CADP,EAEF;AAAQ,IAAA,KAAK,EAAC,KAAd;AACE,IAAA,MAAM,EAAC,KADT;AAEE,IAAA,GAAG,EAAE,mCAAkCN,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAFzC;AAGE,IAAA,WAAW,EAAC,GAHd;AAIE,IAAA,KAAK,EAAC,2BAJR;AAKE,IAAA,eAAe,MALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFE,CADD,GAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACG,IAAN,CAAWG,OAAf,CADF,CAXN,CAHF;AAsBD,CA7BD,C,CA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACC,eAAeP,IAAf,C,CAGD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAWF;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { Grid } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\n\nimport Iframe from 'react-iframe';\n\n\n\nconst Post = (props) => {\n\n\n//new post form creates an iframe element if it includes a url otherwise would just show post content\n//-sets the src string and would need an id\n//find simple way to check if there is a valid url (maybe npm package) before rendering\n\n  return(\n    console.log(props.post),\n    console.log(\"https://www.youtube.com/embed/\"+ props.post.url.split(\"/\")[3]),\n    <React.Fragment>\n        {props.post.url !== \"\" ?\n          <div>\n          Notes: <p>{props.post.content}</p>\n        <iframe width=\"380\"\n          height=\"157\"\n          src={\"https://www.youtube.com/embed/\"+ props.post.url.split(\"/\")[3]}\n          frameborder=\"0\"\n          allow=\"autoplay; encrypted-media\"\n          allowfullscreen></iframe>\n          </div> :\n          <div>\n            <p>{props.post.content}</p>\n          </div>\n        }\n     </React.Fragment>\n  )\n\n\n}\n\n// const mapStateToProps = (state, propsFromParent) => {\n//   // let post = state.posts.find(post => post.id === props.singleEvent.id)\n//   return {\n//     loading: state.loading,\n//     events: state.events,\n//     posts: state.posts,\n//   };\n//  };\n//\n//  export default connect(mapStateToProps)(Post);\n export default Post;\n\n\n// let event = state.events.find(event => event.id === parseInt(propsFromParent.eventId))\n\n\n\n// <iframe width=\"380\"\n// height=\"200\"\n// src={props.post.url}\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n//\n//\n\n\n\n\n\n\n    // {props.post.url !== \"\" ?\n    //   <div>\n    //   Notes: <p>{props.post.content}</p>\n    //   <iframe width=\"380\"\n    //   height=\"200\"\n    //   src={props.post.url}\n    //   frameborder=\"0\"\n    //   allow=\"autoplay; encrypted-media\"\n    //   allowfullscreen></iframe>\n    //   </div> :\n    //\n    //   <div>\n    //     <p>{props.post.content}</p>\n    //   </div>\n  // }\n\n\n\n\n\n\n\n\n\n\n//\n// <iframe width=\"380\"\n// height=\"157\"\n// src=\"https://www.youtube.com/embed/Rp8WL621uGM\"\n// frameborder=\"0\"\n// allow=\"autoplay; encrypted-media\"\n// allowfullscreen></iframe>\n// <h1>\"post.content\"</h1>\n"]},"metadata":{},"sourceType":"module"}